/*
 * =====================================================================
 * (c) Copyright 2001  BBNT Solutions, LLC
 * =====================================================================
 */

// quo_instr.idl,v

#ifndef QUO_INSTR
#define QUO_INSTR

#include "quo.idl"

module instr
{
  typedef string Connection_id;
  typedef string Call_id;
  typedef string Method_id;

  typedef long               Accumulator;
  typedef long               Value;
  typedef sequence<Value>    Value_seq;
  typedef unsigned long long Timestamp;

  // locations in a quo connection
  enum Delegate_Kind
  {
    ClientDelegate,
    ObjectDelegate
  };
  const short Delegate_Kind_num = 2;

  // probe points for a treating a delegate as a black box
  // i.e., no internal structure
  enum Probe_pt
  {
    Request_in,
    Request_out,
    Reply_in,
    Reply_out
  };

  const short Probe_pt_num = 4;

  // basic per method call storage structures
  struct Probe_rec
  {
    Accumulator count;  // visits per call
    Timestamp   ts;
    Accumulator error;
    Value_seq   parm_length;
  };

  // a delegate record
  typedef Probe_rec Delegate_rec[Probe_pt_num];

  struct Trace_rec
  {
    Connection_id connection;  // name invoked by application
    Method_id     method;
    Call_id       call;   // calls fr appl to object, init = 1
    short         num_delegates;
    short         num_probe_points;
    Delegate_rec  measures[Delegate_Kind_num];
    short         length;   // keeps track of byte # for Trace_rec
    short         count;
  };

  // These should go into the QuoKernel some day

  interface Instrumentation
  {
    Trace_rec createTraceRec (in Connection_id connectionID,
			      in Method_id methodID,
			      in Call_id callID,
			      in short  delegates,
			      in short  probePoints );

    void probe (in Trace_rec traceRec,
		in Delegate_Kind delegate,
		in Probe_pt probePt,
		in Value_seq parmSeq);

    void probeWithErr (in Trace_rec traceRec,
		       in Delegate_Kind delegate,
		       in Probe_pt probePt);

    long long getTS (in Trace_rec traceRec,
		     in Delegate_Kind delegate,
		     in Probe_pt probePt );


    long long getParmLength (in Trace_rec traceRec,
			     in Delegate_Kind delegate,
			     in Probe_pt probePt );

    long getMethodCalls (in Trace_rec traceRec,
			 in Delegate_Kind delegate,
			 in Probe_pt probePt );

    long getErrors (in Trace_rec traceRec,
		    in Delegate_Kind delegate,
		    in Probe_pt probePt );

    Value_seq getMethodParms (in Trace_rec traceRec,
			      in Delegate_Kind delegate,
			      in Probe_pt probePt );

    string genGuid ();

    void registerCall (in Trace_rec traceRec);

    void openLog ();

    void closeLog ();

    ::quo::SignalEvent createSignal (in Trace_rec traceRec,
				     in string name);

    ::quo::AssociationSeq createSignalAssociations (in Trace_rec traceRec);

    // Only for testing
    void printSignal (in ::quo::SignalEvent alist);
  };

};

#endif
