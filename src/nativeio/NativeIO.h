/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class NativeIO */

#ifndef _Included_NativeIO
#define _Included_NativeIO
#ifdef __cplusplus
extern "C" {
#endif
#undef NativeIO_O_RDONLY
#define NativeIO_O_RDONLY 0L
#undef NativeIO_O_WRONLY
#define NativeIO_O_WRONLY 1L
#undef NativeIO_O_RDWR
#define NativeIO_O_RDWR 2L
#undef NativeIO_O_NDELAY
#define NativeIO_O_NDELAY 4L
#undef NativeIO_O_APPEND
#define NativeIO_O_APPEND 8L
#undef NativeIO_O_SYNC
#define NativeIO_O_SYNC 16L
#undef NativeIO_O_NONBLOCK
#define NativeIO_O_NONBLOCK 128L
#undef NativeIO_O_CREAT
#define NativeIO_O_CREAT 256L
#undef NativeIO_O_TRUNC
#define NativeIO_O_TRUNC 512L
#undef NativeIO_O_EXCL
#define NativeIO_O_EXCL 1024L
#undef NativeIO_O_NOCTTY
#define NativeIO_O_NOCTTY 2048L
#undef NativeIO_S_IRUSR
#define NativeIO_S_IRUSR 256L
#undef NativeIO_S_IWUSR
#define NativeIO_S_IWUSR 128L
#undef NativeIO_S_IXUSR
#define NativeIO_S_IXUSR 64L
#undef NativeIO_S_IRGRP
#define NativeIO_S_IRGRP 32L
#undef NativeIO_S_IWGRP
#define NativeIO_S_IWGRP 16L
#undef NativeIO_S_IXGRP
#define NativeIO_S_IXGRP 8L
#undef NativeIO_S_IROTH
#define NativeIO_S_IROTH 4L
#undef NativeIO_S_IWOTH
#define NativeIO_S_IWOTH 2L
#undef NativeIO_S_IXOTH
#define NativeIO_S_IXOTH 1L
#undef NativeIO_S_ISUID
#define NativeIO_S_ISUID 2048L
#undef NativeIO_S_ISGID
#define NativeIO_S_ISGID 1024L
#undef NativeIO_S_ISVTX
#define NativeIO_S_ISVTX 512L
#undef NativeIO_S_ENFMT
#define NativeIO_S_ENFMT 1024L
#undef NativeIO_EOF
#define NativeIO_EOF -1L
#undef NativeIO_ERROR
#define NativeIO_ERROR -2L
#undef NativeIO_TRYAGAIN
#define NativeIO_TRYAGAIN -3L
#undef NativeIO_BUFFERFULL
#define NativeIO_BUFFERFULL -4L
#undef NativeIO_MOD_SELECT
#define NativeIO_MOD_SELECT 0L
#undef NativeIO_MOD_SIGNAL
#define NativeIO_MOD_SIGNAL 1L
/*
 * Class:     NativeIO
 * Method:    canAcceptJNI
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_NativeIO_canAcceptJNI
  (JNIEnv *, jclass, jint);

/*
 * Class:     NativeIO
 * Method:    getCharJNI
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_NativeIO_getCharJNI
  (JNIEnv *, jclass, jint);

/*
 * Class:     NativeIO
 * Method:    getFDs
 * Signature: ([I)I
 */
JNIEXPORT jint JNICALL Java_NativeIO_getFDs
  (JNIEnv *, jclass, jintArray);

/*
 * Class:     NativeIO
 * Method:    getFDsSmart
 * Signature: (Z[I)I
 */
JNIEXPORT jint JNICALL Java_NativeIO_getFDsSmart
  (JNIEnv *, jclass, jboolean, jintArray);

/*
 * Class:     NativeIO
 * Method:    initScheduler
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_NativeIO_initScheduler
  (JNIEnv *, jclass, jint);

/*
 * Class:     NativeIO
 * Method:    makeNonBlockJNI
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_NativeIO_makeNonBlockJNI
  (JNIEnv *, jclass, jint);

/*
 * Class:     NativeIO
 * Method:    putCharJNI
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_NativeIO_putCharJNI
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     NativeIO
 * Method:    readJNI
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_NativeIO_readJNI
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

/*
 * Class:     NativeIO
 * Method:    registerRead
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_NativeIO_registerRead
  (JNIEnv *, jclass, jint);

/*
 * Class:     NativeIO
 * Method:    registerWrite
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_NativeIO_registerWrite
  (JNIEnv *, jclass, jint);

/*
 * Class:     NativeIO
 * Method:    selectJNI
 * Signature: ([I[I)[Z
 */
JNIEXPORT jbooleanArray JNICALL Java_NativeIO_selectJNI
  (JNIEnv *, jclass, jintArray, jintArray);

/*
 * Class:     NativeIO
 * Method:    writeJNI
 * Signature: (I[BII)I
 */
JNIEXPORT jint JNICALL Java_NativeIO_writeJNI
  (JNIEnv *, jclass, jint, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
