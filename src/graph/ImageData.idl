//====================================================================
/**
 *  @file    ImageData.idl
 *
 *  @author  Wes Beebee <wbeebee@mit.edu>
 *
 *  Copyright (C) 2003 Wes Beebee <wbeebee@mit.edu>
 *  Licensed under the terms of the GNU GPL; see COPYING for details.
 */
//====================================================================

#ifndef IMAGEDATA_IDL
#define IMAGEDATA_IDL

/**
 * @namespace imagerec.graph
 * @brief  Interface for sending data through MIT's ATR.
 *
 */
module imagerec
{
  module graph {
    struct ImageData {
      sequence<octet> rvals;
      sequence<octet> gvals;
      sequence<octet> bvals;
      long x;
      long y;
      long width;
      long height;
      unsigned long long time;
      long id;
      long command;
      long receiverID;
      float c1;
      float c2;
      float c3;
      boolean lastImage;
      octet labelID;
      boolean conditional;
      float angle;
      long blueThreshold1;
      long blueThreshold2;
      /**
       * Factor used to adjust for dynamic resolution changes.
       * An object with a width of 100 pixels at one resolution
       * could be the same actual size as an object with a width
       * of 200 pixels at another resolution.<br><br>
       *
       * The scale factor is intended to be 1/width of the
       * <b>original</b> image.
       */
      float scaleFactor;
      /**
       * If this ImageData has been cropped around a particular
       * object, and if tracking is being used, then this
       * field contains the unique tracking ID of the object.
       * Use this ID to obtain info about the tracked object
       * from the designated ObjectTracker in CommonMemory.
       */
      long trackedObjectUniqueID;
    };
  };
};

#endif
