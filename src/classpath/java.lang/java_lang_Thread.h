/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_lang_Thread */

#ifndef _Included_java_lang_Thread
#define _Included_java_lang_Thread
#ifdef __cplusplus
extern "C" {
#endif
#undef java_lang_Thread_MIN_PRIORITY
#define java_lang_Thread_MIN_PRIORITY 1L
#undef java_lang_Thread_NORM_PRIORITY
#define java_lang_Thread_NORM_PRIORITY 5L
#undef java_lang_Thread_MAX_PRIORITY
#define java_lang_Thread_MAX_PRIORITY 10L
/* Inaccessible static: numAnonymousThreadsCreated */
/*
 * Class:     java_lang_Thread
 * Method:    nativeInit
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_nativeInit
  (JNIEnv *, jobject, jlong);

/*
 * Class:     java_lang_Thread
 * Method:    countStackFrames
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_java_lang_Thread_countStackFrames
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    currentThread
 * Signature: ()Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Thread_currentThread
  (JNIEnv *, jclass);

/*
 * Class:     java_lang_Thread
 * Method:    holdsLock
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Thread_holdsLock
  (JNIEnv *, jclass, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    nativeInterrupt
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_nativeInterrupt
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    interrupted
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Thread_interrupted
  (JNIEnv *, jclass);

/*
 * Class:     java_lang_Thread
 * Method:    isInterrupted
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Thread_isInterrupted
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    isAlive
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Thread_isAlive
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    nativeResume
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_nativeResume
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    yield
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_yield
  (JNIEnv *, jclass);

/*
 * Class:     java_lang_Thread
 * Method:    sleep
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_sleep
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     java_lang_Thread
 * Method:    start
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_start
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    nativeStop
 * Signature: (Ljava/lang/Throwable;)V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_nativeStop
  (JNIEnv *, jobject, jthrowable);

/*
 * Class:     java_lang_Thread
 * Method:    nativeSuspend
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_nativeSuspend
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Thread
 * Method:    nativeSetPriority
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_java_lang_Thread_nativeSetPriority
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
