#!/bin/sh

# Usage: run-java <class_name> <args>
#
# note that you can set JAVA=jdb to invoke the debugger with an identical
# environment.

# set FLEX_DIR
. `dirname $0`/find-flex-dir
# find java
export JSR14DISTR=$(`dirname $0`/find-gj | tail -1)
if [ -x $JSR14DISTR/scripts/java ]; then
    defjava=$JSR14DISTR/scripts/java
else
    defjava=java
fi

# grab more java opts from the command line.
while [ -n "$1" ]; do
    case "$1" in
    -D*) javaopts="$javaopts $1" ;;
    *)   break ;;
    esac
    shift
done

# check java version
optprefix=X
if java -version 2>&1 | grep -q 'version "1.1'; then
  echo "WARNING: YOU ARE USING JAVA 1.1. (JDK1.2 or above is preferred)" 1>&2
  optprefix=""
fi
# ok.

# you can set OPT_FLEX_SUPPORT_FILES to add additional support files: .jar/.zip
if [ -n "$USE_SUN_JDK" ]; then
    # use sun jdk in SupportNP.
    javaopts="-Dharpoon.runtime1.sunjdk=true $javaopts"

## There used to be a time when all these .jar's where necessary.
## Most of them are no longer necessary: Flex handles JDK 1.1
## classes.zip fine.  If you need to go beyond 1.1, you should use
## Classpath instead.  The next line is preserved for reference only
##    FLEX_SUPPORT_FILES="${OPT_FLEX_SUPPORT_FILES} ${FLEX_DIR}/Support/cpmath.jar ${FLEX_DIR}/Support/cpzip.jar ${FLEX_DIR}/Support/reflect-thunk.jar ${FLEX_DIR}/SupportNP/sunthunk.jar ${FLEX_DIR}/SupportNP/collections.jar ${FLEX_DIR}/SupportNP/classes.zip"
    FLEX_SUPPORT_FILES="${FLEX_DIR}/SupportNP/classes.zip"
elif [ -n "$USE_MINILIB" ]; then
    javaopts="-Dharpoon.runtime1.minilib=true $javaopts"
    FLEX_SUPPORT_FILES="${OPT_FLEX_SUPPORT_FILES} Support/minilib.jar"
else
    # use GNU classpath.  First look for the CLASSPATH_HOME variable, which
    # should specify a classpath CVS pull.

    # - first, if CLASSPATH_HOME is undefined, check a sibling directory
    if [ -z "$CLASSPATH_HOME" ]; then
	export CLASSPATH_HOME=${FLEX_DIR}/../classpath-install
    fi
    if [ -f "$CLASSPATH_HOME/share/classpath/glibj.zip" ]; then
	FLEX_SUPPORT_FILES="$CLASSPATH_HOME/share/classpath/glibj.zip"
    # - second, look for the classpath-config script on your path.
    elif [ -n "$(which classpath-config)" ]; then
	FLEX_SUPPORT_FILES="$(classpath-config --classpath)"
    # - third, check if this is the debian 'classpath' package
    elif [ -f "/usr/share/classpath/glibj.zip" ]; then
	FLEX_SUPPORT_FILES="/usr/share/classpath/glibj.zip"
    else
    # - what more can we do?  Just fail
	echo Cannot find Classpath glibj.zip; set the env. var CLASSPATH_HOME
	exit 1;
    fi
    
    for f in src/classpath/cpvm.jar src/java.lang.reflect/reflect-thunk.jar; do
	if [ -f ${RUNTIME_DIR}/$f ]; then
	    FLEX_SUPPORT_FILES="$RUNTIME_DIR/$f $FLEX_SUPPORT_FILES"
	else
	    FLEX_SUPPORT_FILES="$FLEX_DIR/Support/$(basename $f) $FLEX_SUPPORT_FILES"
	fi
    done
    FLEX_SUPPORT_FILES="${OPT_FLEX_SUPPORT_FILES} ${FLEX_SUPPORT_FILES}"
fi

# special case for realtime.jar: grab this from the Realtime directory.
if [ -n "$REALTIME_DIR" -a -f ${REALTIME_DIR}/realtime.jar ]; then
    FLEX_SUPPORT_FILES="$FLEX_SUPPORT_FILES ${REALTIME_DIR}/realtime.jar"
fi

for supp_file in ${FLEX_SUPPORT_FILES}; do
    if [ ! -f $supp_file ]; then
	echo Support file ${supp_file} missing!;
	exit -1;
    else
	SUPP_FILES_PATH="${SUPP_FILES_PATH}:${supp_file}";
    fi;
done

# you can set FLEXPATH to assign additional components to the harpoon classpath
harpoonpath=${FLEXPATH}${FLEXPATH:+:}.${SUPP_FILES_PATH}

if type -t cygpath > /dev/null ; then
    harpoonpath=`cygpath -wp "$harpoonpath"`
fi

echo
echo run-java COMMAND: ${JAVA:=$defjava -ea} -${optprefix}ss${FLEXSTACK:=16m} -${optprefix}mx${FLEXMEM:=768m} -classpath $FLEX_DIR:$FLEX_DIR/Support/jutil.jar:$FLEX_DIR/Support/jpaul.jar $javaopts -Dharpoon.class.path=$harpoonpath "$@"
echo

${JAVA:=$defjava -ea} -${optprefix}ss${FLEXSTACK:=16m} -${optprefix}mx${FLEXMEM:=768m} -classpath $FLEX_DIR:$FLEX_DIR/Support/jutil.jar:$FLEX_DIR/Support/jpaul.jar $javaopts -Dharpoon.class.path=$harpoonpath "$@"
