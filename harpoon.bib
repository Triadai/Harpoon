% -*-bibtex-*- This is a BibTeX document.
% $Id: harpoon.bib,v 1.47 1999-06-13 00:34:08 cananian Exp $
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Various journal and conference string definitions:
@string{CACM = {Communications of the ACM}}
@string{ACM =  {ACM}}
@string{IEEE = {IEEE}}
@string{ICCAD  = "Proceedings of the {IEEE}/{ACM} International Conference on
                  Computer Aided Design ({ICCAD})"}
@string{ICS98  = "ICS '98.  Conference proceedings of the 1998
                  international conference on Supercomputing"}
@string{PLDI90 = "Proceedings of the {ACM} {SIGPLAN} '90 Conference on
                  Programming Language Design and Implementation ({PLDI})"}
@string{PLDI93 = "Proceedings of the {ACM} {SIGPLAN} '93 Conference on
                  Programming Language Design and Implementation ({PLDI})"}
@string{PLDI94 = "Proceedings of the {ACM} {SIGPLAN} '94 Conference on
                  Programming Language Design and Implementation ({PLDI})"}
@string{PLDI95 = "Proceedings of the {ACM} {SIGPLAN} '95 Conference on
                  Programming Language Design and Implementation ({PLDI})"}
@string{PLDI96 = "Proceedings of the {ACM} {SIGPLAN} '96 Conference on
                  Programming Language Design and Implementation ({PLDI})"}
@string{PLDI97 = "Proceedings of the {ACM} {SIGPLAN} '97 Conference on
                  Programming Language Design and Implementation ({PLDI})"}
@string{POPL88 = "Proceedings of the 15th {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL89 = "Proceedings of the 16th {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL90 = "Proceedings of the 17th {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL91 = "Proceedings of the 18th {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL94 = "Proceedings of the 21st {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL95 = "Proceedings of the 22nd {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL96 = "Proceedings of the 23rd {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL97 = "Proceedings of the 24th {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{POPL98 = "Proceedings of the 25th {ACM} Symposium on Principles
                  of Programming Languages ({POPL})"}
@string{PPOPP99 = "Proceedings of the 7th {ACM} {SIGPLAN} symposium on
                   Principles and practice of parallel programming ({PPoPP})"}
@string{TOPLAS = "{ACM} Transactions on Programming Languages and Systems"}
@string{ASIAN97 = "Advances in Computing Science --- {ASIAN} '97.  Third
                  Asian Computing Conference.  Proceedings"}
@string{TACAS97 = "Tools and Algorithms for the Construction and
                  Analysis of Systems.  Third International Workshop,
                  {TACAS} '97.  Proceedings"}
@string{CRYPTO97 = "Proc.\ {CRYPTO} 97"}
@string{EUROCRYPT97 = "Proc.\ {EUROCRYPT} 97"}
@string{MICRO30 = "{MICRO} 30. Proceedings of the thirtieth annual {IEEE/ACM}
                   international symposium on Microarchitecture"}

% papers read.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%% Predicates and Sigmas.

@InProceedings{moon98:pred,
  author = 	 {Sungdo Moon and Mary W. Hall and Brian R. Murphy},
  title = 	 {Predicated Array Data-Flow Analysis for Run-Time
                  Parallelization},
  booktitle = 	 ICS98,
  pages =	 {204-211},
  year =	 1998,
  address =	 {Melbourne, Australia},
  month =	 jul,
  annote =	 {Predication in an array analysis context.}
}


@InProceedings{webber97:binrel,
  author = 	 {Adam Brooks Webber},
  title = 	 {Program Analysis Using Binary Relations},
  booktitle = 	 PLDI97,
  pages =	 {249-259},
  year =	 1997,
  address =	 {Las Vegas, Nevada},
  month =	 may,
  url =		 {http://www.acm.org/pubs/articles/proceedings/pldi/258915/p249-webber/},
  annote =       {Very powerful analysis/optimization technique.
                  Originally presented for LISP basic blocks only.
                  With phi and sigma functions we can extend the
                  analysis to the whole program and incorporate
                  elements of reachability analysis.  Analysis
                  extracts relations between pairs of variables, and
                  is very type-flexible.  Fairly complicated
                  implementation, however.}
}

%%%% Language issues.

%%%%%%% Esterel.

@InProceedings{gagne97:nonstandard,
  author = 	 {Jean-Raymond Gagn{\'e} and John Plaice},
  title = 	 {The Non-standard Semantics of {Esterel}},
  booktitle = 	 ASIAN97,
  year = 	 1997,
  address = 	 {Kathmandu, Nepal},
  pages =	 {381-382},
  annote =	 {Presents rationale for using a (time+delta) timeline
                  instead of Esterel's integer-valued instantaneous
                  time model.  Claims that Esterel really uses the
                  (time+delta) timeline without realizing it.}
}

@InCollection{berry92:hardware_esterel,
  author = 	 {G{\'e}rard Berry},
  title = 	 {{Esterel} on hardware},
  booktitle = 	 {Mechanized Reasoning and Hardware Design},
  pages =	 {87-103},
  publisher =	 {Prentice Hall},
  year =	 1992,
  editorIGNORE =	 {C.A.R. Hoare and M.J.C. Gordon},
  annote =	 {a simple hardware implementation of a subset of
                  esterel, using 4 type of fundamental logic blocks.
                  Optimizers based on BDDs.  Very useful bibliography.}
}

@Unpublished{berry:esterel_primer,
  author = 	 {G{\'e}rard Berry},
  title = 	 {The {Esterel} v5 Language Primer},
  note = 	 {Available from 
                 \texttt{http://\hspace{0pt}www.inria.fr/\hspace{0pt}meije/\hspace{0pt}esterel/\hspace{0pt}esterel-eng.html}},
  month = 	 mar,
  year = 	 1998,
  url = 	 {ftp://ftp-sop.inria.fr/meije/esterel/papers/primer.ps.gz},
  annote = 	 {Lots of dry technical detail on the language, but
                  also some enlightening discussion of the rationale
                  behind the design.  See especially sections on
                  `Transformational, Interactive, and Reactive
                  Systems,' `Write Things Once,' and preemption.}
}

@InProceedings{berry97:synth_opt_ver_esterel,
  author = 	 {G{\'e}rard Berry},
  title = 	 {Hardware and Software Synthesis, Optimization, and
                  Verification from {Esterel} Programs},
  booktitle = 	 TACAS97,
  year = 	 1997,
  address = 	 {Enschede, The Netherlands},
  pages =	 {1-3},
  month =	 apr,
  annote =	 {Two-page overview of the Esterel system.  At least
                  it has a decent bibliography.}
}
@InProceedings{mitra97:async_esterel,
  author = 	 {Raj S. Mitra and Bishnupriya Bhattacharya and
                  Luciano Lavagno},
  title = 	 {Asynchronous Implementation of Synchronous {Esterel}
                  Specifications},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {348-353},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {In which we learn that Esterel is inherently a
                  synchronous language (surprise!).  Semantics have to
                  change to support asynchronous implementation; this
                  paper shows how.  Not useful to us.}
}

%%%%%%% Other synchronous languages

@InProceedings{amagbegnon95:signal,
  author = 	 {Pascalin Amagb{\'e}gnon and Lo{\"\i}c Besnard and
                  Paul Le Guernic},
  title = 	 {Implementation of the Data-flow Synchronous Language
                  {SIGNAL}},
  booktitle = 	 PLDI95,
  year =	 1995,
  address =	 {La Jolla, California},
  month =	 Jun,
  pages =	 {163-173},
  url = 	 {http://www.acm.org/pubs/articles/proceedings/pldi/},
  annote =	 {Not terribly useful.  Intriguing use of the word
                  `arborescent' for `tree-structured'.}
}

@Article{chung95:language_constructs,
  author = 	 {Tai M. Chung and Hank G. Dietz},
  title = 	 {Language Constructs and Transformation for Hard
                  Real-time Systems},
  journal = 	 {{ACM} {SIGPLAN} Notices},
  year = 	 1995,
  volume =	 30,
  number =	 11,
  pages =	 {41-49},
  month =	 nov,
  annote =	 {Presents a simple set of language-independent
                  extensions to specify real-time constraints.  Also
                  contains the interesting claim that the real-time 
                  compilation problem has been solved, and references 
                  an unpublished paper to prove it.}
}

%%%%%%% Other language issues.


%%%%%%% Compiler issues

@InProceedings{weise94:vdg,
  author = 	 {Daniel Weise and Roger F. Crew and Michael Ernst and
                  Bjarne Steensgaard},
  title = 	 {Value Dependence Graphs: Representation without Taxation},
  booktitle = 	 POPL94,
  year =	 1994,
  address =	 {Portland, Oregon},
  month =	 Jan,
  pages =	 {297-310},
  annote =	 {Dataflow representation useful; also recursive/loop
                  structure useful},
  url = 	{ftp://research.microsoft.com/pub/papers/vdg.ps}
}

@InProceedings{hong93:realtime,
  author = 	 {Seongsoo Hong and Richard Gerber},
  title = 	 {Compiling Real-Time Programs into Schedulable Code},
  booktitle = 	 PLDI93,
  year =	 1993,
  address =	 {Albuquerque, New Mexico},
  month =	 jun,
  pages =	 {166-176},
  url = 	 {http://www.acm.org/pubs/articles/proceedings/pldi/},
  annote =	 {Code motion for timing optimization.  Are all
                  real-time schedulers iterative?}
}

@InProceedings{duesterwald93:arrayflow,
  author = 	 {Evelyn Duesterwald and Rajiv Gupta and Mary Lou Soffa},
  title = 	 {A Practical Data Flow Framework for Array Reference
                  Analysis and its Use in Optimizations},
  booktitle = 	 PLDI93,
  year =	 1993,
  address =	 {Albuquerque, New Mexico},
  month =	 jun,
  pages =	 {68-77},
  url = 	 {http://www.acm.org/pubs/citations/proceedings/pldi/155090/p68-duesterwald/},
  annote =	 {Not terribly useful.  REREAD LATER.}
}

@InProceedings{click95:IR,
  author =       {Cliff Click and Michael Paleczny},
  title =        "A Simple Graph-Based Intermediate Representation",
  booktitle =    "The First {ACM} {SIGPLAN} Workshop on Intermediate
                 Representations",
  address =      {San Francisco, California},
  month =        jan,
  year =         "1995",
  url =          {http://www.cs.rice.edu/~mpal/IR95.ps},
  annote =	 {Interesting examples of C++ code, but light on
                  optimization results.  We really want to peek at
                  Cliff Click's PhD thesis. [Ed note: I found it!]}
}

@InProceedings{sreedhar95:lintime,
  author = 	 {Vugranam C. Sreedhar and Guang R. Gao},
  title = 	 {A Linear Time Algorithm for Placing $\phi$-Nodes},
  booktitle = 	 POPL95,
  pages =	 {62-73},
  year =	 1995,
  address =	 {San Francisco, California},
  month =	 jan,
  url =		 {http://www.acm.org/pubs/citations/proceedings/plan/199448/p62-sreedhar/},
  annote =	 {Just what the title says.  I need to implement this eventually.}
}

@InProceedings{sreedhar96:dj,
  author = 	 {Vugranam C. Sreedhar and Guang R. Gao and {Yong-fong} Lee},
  title = 	 {A New Framework for Exhaustive and Incremental Data
                  Flow Analysis Using {DJ} Graphs},
  booktitle = 	 PLDI96,
  year =	 1996,
  address =	 {Philadelphia, Pennsylvania},
  month =	 may,
  pages =	 {278-290},
  url = 	 {http://www.acm.org/pubs/citations/proceedings/pldi/231379/p278-sreedhar/},
  annote =	 {Emphasis on Incremental.  If we decide to use DJ
                  graphs, this paper could be useful for its examples.
                  Not much new, though, compared to the N other DJ
                  graph papers these authors have cranked out.}
}

@Article{sreedhar97:domtree,
  author = 	 {Vugranam C. Sreedhar and Guang R. Gao and
                  {Yong-fong} Lee},
  title = 	 {Incremental Computation of Dominator Trees},
  journal = 	 TOPLAS,
  year = 	 1997,
  volume =	 19,
  number =	 2,
  month =	 mar,
  pages =	 {239-252},
  url =		 {http://www.acm.org/pubs/citations/journals/toplas/1997-19-2/p239-sreedhar/},
  annote =	 {Seems to work well, but I don't think we need
                  incremental updates for Harpoon.  Maybe I'm wrong.
                  Very similar to their other papers on this
                  topic. <wry grin>}
}

@InProceedings{granlund94:divopt,
  author = 	 {Torbj{\"o}rn Granlund and Peter L. Montgomery},
  title = 	 {Division by Invariant Integers using Multiplication},
  booktitle = 	 PLDI94,
  year =	 1994,
  address =	 {Orlando, Florida},
  month =	 jun,
  pages =	 {61-72},
  url = 	 {http://www.acm.org/pubs/citations/proceedings/pldi/178243/p61-granlund/},
  annote =	 {*Very* useful for eliminating logic complexity. Also
                  includes lots of references for deconstructing
                  multiplies. In conjunction with induction variable
                  analysis, some very powerful optimizations are
                  possible. The optimization of the radix conversion
                  code is nothing short of brilliant.}
}

@InProceedings{defouw98:classanal,
  author = 	 {Greg DeFouw and David Grove and Craig Chambers},
  title = 	 {Fast Interprocedural Class Analysis},
  booktitle = 	 POPL98,
  year =	 1998,
  address =	 {San Diego, California},
  month =	 jan,
  pages =	 {222-246},
  url =		 {http://www.acm.org/pubs/citations/proceedings/plan/268946/p222-defouw/},
  annote =	 {This basically tells us that class/type analysis
                  will be very slow.  We can make it faster, but we
                  lose much precision.  In hardware compilation we
                  don't care so much about speed, perhaps, so maybe we
                  just suck up and deal.  Return to this paper before
                  implementing our type inference engine. [theory
                  practice conflict: the idea I've got in my head
                  doesn't seem as slow as the fastest algorithm
                  presented here.  Reconcile this.] [Further thought:
                  these algorithms look like they should be integrated with
                  an (SSA?) constant-propagation/dead-code analysis to come
                  up with the most precise class information possible.  Will
                  be slow, but worth it.  This paper's optimizations result
                  in less class/type precision, which is unacceptable to us.]}
}

@InProceedings{click95:gcm_gvn,
  author = 	 {Cliff Click},
  title = 	 {Global Code Motion / Global Value Numbering},
  booktitle = 	 PLDI95,
  year =	 1995,
  address =	 {La Jolla, California},
  month =	 jun,
  pages =	 {246-257},
  url = 	 {http://www.acm.org/pubs/citations/proceedings/pldi/207110/p246-click/},
  annote =	 {Simple and works, but relies on heuristic to place,
                  and seems overly wedded to basic blocks (which we
                  want to eliminate).  I like SSAPRE better, even
                  though it is *much* more complicated.  Reassessment:
                  Maybe basic blocks aren't so bad.}
}

@InProceedings{chow97:ssapre,
  author = 	 {Fred Chow and Sun Chan and Robert Kennedy and
                  {Shin-Ming} Liu and Raymond Lo and Peng Tu},
  title = 	 {A New Algorithm for Partial Redundancy Elimination
                  based on {SSA} Form},
  booktitle = 	 PLDI97,
  year =	 1997,
  address =	 {Las Vegas, Nevada},
  month =	 may,
  pages =	 {273-286},
  url =		 {http://www.acm.org/pubs/citations/proceedings/pldi/258915/p273-chow/},
  annote =	 {Powerful but very, very complicated. Probably worth
                  implementing if we stay in SSA form, although
                  dataflow-based methods (see Click's IR) may be
                  simpler.  Also non-linear complexity for simple
                  implementations.}
}

@Article{click95:combin,
  author = 	 {Cliff Click and Keith D. Cooper},
  title = 	 {Combining Analyses, Combining Optimizations},
  journal = 	 TOPLAS,
  volume =	 17,
  number =	 2,
  year =	 1995,
  month =	 mar,
  pages =	 {181-196},
  url =          {http://www.acm.org/pubs/toc/Abstracts/0164-0925/201061.html},
  annote =	 {Very theoretical==not terribly useful.}
}

@PhdThesis{click95:thesis,
  author = 	 {Cliff Click},
  title = 	 {Combining Analyses, Combining Optimizations},
  school = 	 {Rice University},
  year = 	 1995,
  month =	 feb,
  annote =	 {Lots of very useful optimization information, plus a
                  very powerful optimistic analysis algorithm, which I
                  plan to extend into our `extended type analysis' pass.}
}

@Article{beck91:ctrlflow,
  author = 	 {Micah Beck and Richard Johnson and Keshav Pingali},
  title = 	 {From Control Flow to Dataflow},
  journal = 	 {Journal of Parallel and Distributed Computing},
  year = 	 1991,
  volume =	 12,
  number =	 2,
  month =	 jun,
  pages =	 {118-129},
  annote =	 {The paper that started it all.  Uses an
                  over-restrictive control model, though, and funky
                  store stuff.}
}

@InProceedings{johnson93:dfg,
  author = 	 {Richard Johnson and Keshav Pingali},
  title = 	 {Dependence-based program analysis},
  booktitle = 	 PLDI93,
  pages =	 {78-89},
  year =	 1993,
  address =	 {Albuquerque, New Mexico},
  month =	 jun,
  url =		 {http://www.acm.org/pubs/citations/proceedings/pldi/155090/p78-johnson/},
  annote =	 {An $O(EV)$ algorithm for merge and switch placement}
}

@InProceedings{johnson94:pst,
  author = 	 {Richard Johnson and David Pearson and Keshav Pingali},
  title = 	 {The Program Structure Tree: 
                  Computing Control Regions in Linear Time},
  booktitle = 	 PLDI94,
  pages =	 {171-185},
  year =	 1994,
  address =	 {Orlando, Florida},
  month =	 jun,
  url =		 {http://www.acm.org/pubs/citations/proceedings/pldi/178243/p171-johnson/},
  annote =	 {An $O(EV)$ algorithm for computing SESE regions}
}

@TechReport{johnson93:sese,
  author = 	 {Richard Johnson and David Pearson and Keshav Pingali},
  title = 	 {Finding Regions Fast: Single Entry Single Exit and Control
                  Regions in Linear Time},
  institution =  {Cornell University},
  year = 	 1993,
  number =	 {TR 93-1365},
  address =	 {Ithaca, NY 14853-7501},
  month =	 jul,
  annote =	 {SESE regions through cycle equivalence.  Most complete 
                  algorithm description},
  url =		 {http://cs-tr.cs.cornell.edu:80/Dienst/UI/1.0/Display/ncstrl.cornell/TR93-1365}
}

@TechReport{pingali90:dfg,
  author = 	 {Keshav Pingali and Micah Beck and Richard C. Johnson and Mayan Moudgill and Paul Stodghill},
  title = 	 {Dependence Flow Graphs: An Algebraic Approach to Program Dependencies},
  institution =  {Cornell University},
  year = 	 1990,
  number =	 {TR 90-1152},
  address =	 {Ithaca, NY 14853-7501},
  month =	 sep,
  annote =	 {interesting variation on `dependence-based program analysis';
                  defines a formal executable semantics for a DFG-like program
                  representation, with special loop constructs},
  url = 	 {http://cs-tr.cs.cornell.edu:80/Dienst/UI/1.0/Display/ncstrl.cornell/TR90-1152}
}

@Article{rinard97:commute,
  author = 	 {Martin C. Rinard and Pedro C. Diniz},
  title = 	 {Commutivity Analysis: A New Analysis Technique for
                  Parallelizing Compilers},
  journal = 	 TOPLAS,
  year = 	 1997,
  volume =	 19,
  number =	 6,
  month =	 nov,
  pages =	 {942-991},
  url =		 {http://www.acm.org/pubs/citations/journals/toplas/1997-19-6/p942-rinard/},
  annote =	 {Not terribly relevant to the current project, but
                  interesting nonetheless.  Perhaps we can perform
                  some commutivity analysis in Harpoon to free up parallelism?}
}

@Article{janssen97:cns,
  author = 	 {Johan Janssen and Henk Corporaal},
  title = 	 {Making Graphs Reducible with Controlled Node Splitting},
  journal = 	 TOPLAS,
  year = 	 1997,
  volume =	 19,
  number =	 6,
  month =	 nov,
  pages =	 {1031-1052},
  url =		 {http://www.acm.org/pubs/citations/journals/toplas/1997-19-6/p1031-janssen/},
  annote =	 {How to make any control flow graph reducible using a
                  minimum number of splits/duplicates.  VERY USEFUL if
                  we need reducible graphs.  (I suspect that the
                  properties of Java give us this for free.) Good results.}
}

@Article{gerlek95:inductssa,
  author = 	 {Michael P. Gerlek and Eric Stoltz and Michael Wolfe},
  title = 	 {Beyond Induction Variables: Detecting and
                  Classifying Sequences Using a Demand-Driven {SSA} Form},
  journal = 	 TOPLAS,
  year = 	 1995,
  volume =	 17,
  number =	 1,
  month =	 jan,
  pages =	 {85-122},
  url =		 {http://www.acm.org/pubs/citations/journals/toplas/1995-17-1/p85-gerlek/},
  annote =	 {Very powerful technique for induction variable
                  analysis using a variant of the SSA form.  Requires
                  a symbolic math package for full power, but can
                  accomplish classification easily.  mu and nu nodes
                  are used in addition to phi nodes; they might be
                  worthwhile subclasses.  Min/max bounds can often be
                  computed.  Useful useful stuff.  Reference to paper
                  on `loop distribution' and `loop interchanging' that
                  might be worthwhile to track down.  Implementable
                  algorithms.}
}

% Statecharts.

@InProceedings{mueller95:condbran,
  author = 	 {Frank Mueller and David B. Whalley},
  title = 	 {Avoiding Conditional Branches by Code Replication},
  booktitle = 	 PLDI95,
  year =	 1995,
  address =	 {La Jolla, California},
  month =	 jun,
  pages =	 {56--66},
  url =		 {http://www.acm.org/pubs/citations/proceedings/pldi/207110/p56-mueller/},
  annote =	 {Just what the title says.  Probably not useful for a
                  hardware compiler.  Only mildly useful in its
                  original domain, for that matter.}
}

@Article{harel92:overlap,
  author = 	 {David Harel and {Chaim-arie} Kahana},
  title = 	 {On Statecharts with Overlapping},
  journal = 	 {{ACM} Transactions on Software Engineering and Methodology},
  year = 	 1992,
  volume =	 1,
  number =	 4,
  month =	 oct,
  pages =	 {399-421},
  url =		 {http://www.acm.org/pubs/citations/journals/tosem/1992-1-4/p399-harel/},
  annote =	 {Here we basically learn that overlapping statecharts
                  are a Bad Thing.  Do not attempt.}
}

@Article{drusinsky89:hwsynth,
  author = 	 {Doron Drusinsky and David Harel},
  title = 	 {Using Statecharts for Hardware Description and Synthesis},
  journal = 	 {{IEEE} Transactions on Computer-Aided Design},
  year = 	 1989,
  volume =	 8,
  number =	 7,
  month =	 jul,
  pages =	 {798-807},
  annote =	 {A good description of what statecharts are, and a
                  variety of implementation methodologies using
                  various types of PLAs and FSMs.  The infamous
                  traffic light example.  Basic idea: implement
                  statecharts as multi-level Mealy/Moore machines.
                  [See Esterel `latch optimization' paper for how to
                  best create hardware from state machines.]}
}

@Article{harel97:execobj,
  author = 	 {David Harel and Eran Gery},
  title = 	 {Executable Object Modeling with Statecharts},
  journal = 	 {Computer},
  year = 	 1997,
  volume =	 30,
  number =	 7,
  month =	 jul,
  pages =	 {31-42},
  url =		 {http://www.computer.org/computer/co1997/r7031abs.htm},
  annote =	 {Not useful at all.  A waste of time.  Although some
                  of the ideas of mapping methods to events are
                  similar to our approach.}
}

% HARDWARE SECTION

@InProceedings{aggarwal97:netpart,
  author = 	 {Rajat Aggarwal and Rajeev Murgai and Masahiro Fujita},
  title = 	 {Speeding Up Technology-Independent Timing
                  Optimization by Network Partitioning},
  booktitle = 	 ICCAD,
  year =	 1997,
  address =	 {San Jose, California},
  month =	 nov,
  pages =	 {83-90},
  url = 	 {http://www.acm.org/pubs/citations/proceedings/dac/266388/p83-aggarwal/},
  annote =	 {Useful, but presupposes a basic optimizer.  Some
                  good references to basic optimizers, which may prove
                  useful.  Presents a timing-driven partitioning technique.}
}

@InProceedings{bertacco97:disjunct,
  author = 	 {Valeria Bertacco and Maurizio Damiani},
  title = 	 {The Disjunctive Decomposition of Logic Functions},
  booktitle = 	 ICCAD,
  year =	 1997,
  address =	 {San Jose, California},
  month =	 nov,
  pages =	 {78-82},
  url =		 {http://www.acm.org/pubs/citations/proceedings/dac/266388/p78-bertacco/},
  annote =	 {Computationally very expensive. Enables creation of
                  a compact, canonical multi-level circuit directly
                  from a BDD representation, which is a Good
                  Thing. "We found the final netlist to be often close
                  to the output of more complex dedicated optimization
                  tools."  Probably worth implementing, or at least
                  researching further. BIG DRAWBACK: "For the largest
                  benchmarks, the limited set of BDD
                  transformations... do not compensate for the
                  exceptional growth of the BDD representation with
                  respect to the original representation."  I wish I
                  knew what the "original representation" was.}
}

@InProceedings{kukimoto97:xbd0,
  author = 	 {Yuji Kukimoto and Wilsin Gosti and Alexander
                  Saldanha and Robert K. Brayton},
  title = 	 {Approximate Timing Analysis of Combinational
                  Circuits under the {XBD0} Model},
  booktitle = 	 ICCAD,
  year =	 1997,
  address =	 {San Jose, California},
  month =	 nov,
  pages =	 {176-181},
  url =		 {http://www.acm.org/pubs/citations/proceedings/dac/266388/p176-kukimoto/},
  annote =	 {Good overview of timing analysis. Uses a SAT solver
                  to compute approximate timing. May be useful.}
}

@InProceedings{sarrafzadeh97:nrg,
  author = 	 {Majid Sarrafzadeh and Maogang Wang},
  title = 	 {{NRG}: Global and Detailed Placement},
  booktitle = 	 ICCAD,
  year =	 1997,
  address =	 {San Jose, California},
  month =	 nov,
  pages =	 {532-537},
  url =		 {http://www.acm.org/pubs/citations/proceedings/dac/266388/p532-sarrafzadeh/},
  annote =	 {Not enough detail given to be useful.}
}

@InProceedings{arikati97:signature,
  author = 	 {Srinivasa R. Arikati and Ravi Varadarajan},
  title = 	 {A Signature Based Approach to Regularity Extraction},
  booktitle = 	 ICCAD,
  year =	 1997,
  address =	 {San Jose, California},
  month =	 nov,
  pages =	 {542-545},
  url =		 {http://www.acm.org/pubs/citations/proceedings/dac/266388/p542-arikati/},
  annote =	 {The signature idea is a good one.  Not enough info
                  for an implementation, though.  And our regularity
                  information should come from a much higher
                  level. Might be worthwhile referencing to prove that
                  logic synthesis folk spend a lot of effort
                  reconstructing the high-level patterns thrown away
                  by the compiler. Not otherwise useful.}
}

@InProceedings{enos97:reppart,
  author = 	 {Morgan Enos and Scott Hauck and Majid Sarrafzadeh},
  title = 	 {Replication for Logic Bipartitioning},
  booktitle = 	 ICCAD,
  year =	 1997,
  address =	 {San Jose, California},
  month =	 nov,
  pages =	 {342-349},
  url =		 {http://www.acm.org/pubs/citations/proceedings/dac/266388/p342-enos/},
  annote =	 {We can create a better logic partition if we are
                  allowed to duplicate some logic.  Good idea and good
                  overview of partitioning methods.  VERY USEFUL if we
                  need to partition.  We want to use the Strawman
                  algorithm, apparently; we need to look up papers on it.}
}


@InProceedings{leiserson83:retiming,
  author = 	 {Charles E. Leiserson and Flavio M. Rose and James B. Saxe},
  title = 	 {Optimizing Synchronous Circuitry by Retiming},
  booktitle = 	 {Third Caltech Conference on Very Large Scale Integration},
  editor =	 {R. Bryant},
  year =	 1983,
  address =	 {Pasadena, California},
  month =	 mar,
  pages =	 {87-116},
  annote =	 {Three good references on other optimization types.
                  This paper describes how to optimize register
                  placement to obtain the smallest possible clock
                  cycle time. *DON'T HAVE COMPLETE PAPER*.
                  Useful. Includes algorithms to compute the clock
                  period of a circuit, among other things.}
}

@Article{malik91:retiming,
  author = 	 {Sharad Malik and Ellen M. Sentovich and Robert
                  K. Brayton and Alberto Sangiovanni-Vincentelli},
  title = 	 {Retiming and Resynthesis: Optimizing Sequential
                  Networks with Combinational Techniques},
  journal = 	 {{IEEE} Transactions on Computer-Aided Design},
  year = 	 1991,
  volume =	 10,
  number =	 1,
  month =	 jan,
  pages =	 {74--84},
  annote =	 {Useful extension of Leiserson's Retiming paper.
                  Perhaps more information can be found in malik93?
                  Basic idea is that we can push registers to the
                  periphery and disconnect cycles, optimize the
                  resulting circuit, and then push all the registers
                  back in and reconnect the feedback loops.  Makes
                  sense.  We still have to find a valid combinational
                  optimization technique to plug in the middle, though.}
}
@InProceedings{shi97:macro,
  author = 	 {Jianzhong Shi and Akash Randhar and Dinesh Bhatia},
  title = 	 {Macro Block Based {FPGA} Floorplanning},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {21-26},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {Interesting paper when we get to floorplanning our
                  hardware.  Authors note that it is difficult to find
                  hierarchically-structured designs/testcases;
                  hopefully our compiler will change this somewhat.}
}


@InProceedings{chikodikar97:techmap,
  author = 	 {Madhav Y. Chikodikar and Shridhar Laddha and Ashish Sirasao},
  title = 	 {A Technology Mapper for {Xilinx} {FPGAs}},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {57-61},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {"This paper presents a method for area optimal
                  technology mapping for Xilinx FPGAs."  Maps logic
                  onto CLBs; 10\% better than the Xilinx method.  If we
                  ever need to do this, this is the method to
                  use. [Hopefully we can use their code!]}
}

@InProceedings{ravikumar97:regfile,
  author = 	 {C.P. Ravikumar and R. Aggarwal},
  title = 	 {A Graph-Theoretic Approach for Register File based
                  Synthesis},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {118-123},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {In-house know-how!  Interesting paper; replace
                  registers with register *files*... complete
                  algorithms.  Meant for datapath
                  synthesis. "[A]ssumes as input a scheduled data flow
                  graph."}
}

%%%% Asynchronous design

@InProceedings{emerson97:async_design,
  author = 	 {Kimberly D. Emerson},
  title = 	 {Asynchronous Design---an Interesting Alternative},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {318-320},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {Good overview of asynch. design and the rationale
                  behind it.  Briefly: clock skew, power consumption,
                  handling of metastability, and elimination of
                  critical path delay.  Circuits run in `average
                  case' time instead of `worst case' time.}
}

@InProceedings{cheng97:diclasp,
  author = 	 {Fu-Chiung Cheng and Stephen H. Unger and Michael
                  Theobald and Wen-Chung Cho},
  title = 	 {Delay-Insensitive Carry-Lookahead Adders},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {322-328},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {Pretty typical example of async design, using
                  dual-rail signalling.  Proposes DICLASP adder,
                  compares to DIRCA adder.  O(n) logic complexity,
                  O(log log n) average case time complexity.  About
                  twice as transistor-expensive as the standard O(n) * O(n)
                  synchronous ripple-carry adder.}
}
@InProceedings{nanda97:universal,
  author = 	 {K. Nanda and S. K. Desai and S. K. Roy},
  title = 	 {A New Methodology for the Design of Asynchronous
                  Digital Circuits},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {342-347},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {Proposes a way-out revamp of logic design for async
                  systems.  Replaces the conventional dual-rail system
                  with a "non-return-to-zero event driven" scheme, and
                  invents a "universal gate" which acts as and/or/not
                  for this system.  Completely delay-insensitive;
                  *however* very area expensive.  Might be useful for
                  automated async design, though.}
}

@TechReport{hauck93:async_design,
  author = 	 {Scott Hauck},
  title = 	 {Asynchronous Design Methodologies: An Overview},
  institution =  {University of Washington},
  year = 	 1993,
  number =	 {TR-93-05-07},
  month =	 may,
  annote =	 {Very good overview of state of the art in
                  asynchronous design.  As of 1993, there were
                  significant problems with each async design
                  methodology presented.  Is there recent work
                  overcoming some of these difficulties?}
}

%%%%%% DECISION DIAGRAMS

@InProceedings{becker97:decision_diagrams,
  author = 	 {Bernd Becker and Rolf Drechsler},
  title = 	 {Decision Diagrams in Synthesis: Algorithms,
                  Applications, and Extensions},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {46-50},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {Excellent overview of BDDs and its related cousins.
                  Lengthy bibliography.  Also overview the extensions
                  to BDDs to handle (for example) multipliers.}
}
@InProceedings{drechsler97:psdkro,
  author = 	 {Rolf Drechsler},
  title = 	 {Pseudo Kronecker Expressions for Symmetric Functions},
  booktitle = 	 {Proceedings. Tenth International Conference on VLSI Design},
  pages =	 {511-513},
  year =	 1997,
  address =	 {Hyderabad, India},
  month =	 jan,
  annote =	 {An optimizer based of PSDKROs for symmetric
                  functions is described; seems to work pretty well on
                  non-symmetric functions, too.  Tenth-of-a-second
                  execution times; 1000x faster than comparable
                  methods.  Go Go Go!}
}

@InProceedings{kol98:kin,
  author = 	 {Rakefet Kol and Ran Ginosar},
  title = 	 {Kin: A High Performance Asynchronous Processor Architecture},
  booktitle = 	 ICS98,
  pages =	 {433-440},
  year =	 1998,
  address =	 {Melbourne, Australia},
  month =	 jul,
  url =		 {http://www.acm.org/pubs/citations/proceedings/supercomputing/277830/p433-kol/},
  annote =	 {Why asynchronous design will take over the world.}
}

%% newer stuff

@InProceedings{august97:pred,
  author = 	 {David I. August and Wen-mei W. Hwu and Scott A. Mahlke},
  title = 	 {A Framework for Balancing Control Flow and Predication},
  booktitle = 	 MICRO30,
  pages =	 {92-103},
  year =	 1997,
  address =	 {Research Triangle Park, North Carolina},
  month =	 dec,
  annote =	 {Interesting IR with predication bits},
  url =          {http://www.acm.org/pubs/citations/proceedings/micro/266800/p92-august/}
}

@InProceedings{lee99:parssa,
  author = 	 {Jaejin Lee and David A. Padua and Samuel P. Midkiff},
  title = 	 {Basic Compiler Algorithms for Parallel Programs},
  booktitle = 	 PPOPP99,
  pages =	 {1-12},
  year =	 1999,
  address =	 {Atlanta, Georgia},
  month =	 may,
  url =		 {http://www.acm.org/pubs/citations/proceedings/ppopp/301104/p1-lee/},
  annote =	 {SSA form for explicitly parallel programs.}
}


@InProceedings{liao99:issa,
  author = 	 {Shih-Wei Liao and Amer Diwan and Robert P. Bosch
                  Jr. and Anwar Ghuloum and Monica S. Lam},
  title = 	 {{SUIF} Explorer: An Interactive and Interprocedural
                  Parallelizer},
  booktitle = 	 PPOPP99,
  pages =	 {37-48},
  year =	 1999,
  address =	 {Atlanta, Georgia},
  month =	 may,
  url =		 {http://www.acm.org/pubs/citations/proceedings/ppopp/301104/p37-liao/},
  annote =	 {Interprocedural SSA form.}
}

@TechReport{traub86:ttda,
  author = 	 {Kenneth R. Traub},
  title = 	 {A Compiler for the {MIT} Tagged-token Dataflow Architecture},
  institution =  {Massachusetts Institute of Technology},
  year = 	 1986,
  number =	 {MIT/LCS/TR-370},
  address =	 {Cambridge, MA 02139},
  month =	 aug,
  annote =	 {Very interesting, historically.  Intraloop, not interloop,
                  parallelism.}
}

@PhdThesis{havlak94:isa,
  author = 	 {Paul Havlak},
  title = 	 {Interprocedural Symbolic Analysis},
  school = 	 {Rice University},
  year = 	 1994,
  address =	 {Houston, Texas},
  month =	 may,
  annote =	 {TGSSA form.}
}

@InProceedings{ferrante91:pruned,
  author = 	 {Jong-Deok Choi and Ron Cytron and Jeanne Ferrante},
  title = 	 {Automatic construction of sparse data flow evaluation graphs},
  booktitle = 	 POPL91,
  pages =	 {55-66},
  year =	 1991,
  address =	 {Orlando, Florida},
  month =	 jan,
  annote =	 {Definition and algorithm for ``pruned'' SSA form.
                  Incorrectly referenced by \cite{cytron91:ssa}.},
  url =		 {http://www.acm.org/pubs/citations/proceedings/plan/99583/p55-ferrante/}
}

@InProceedings{dhamdhere92:large,
  author = 	 {Dhananjay M. Dhamdhere and Barry K. Rosen and
                  F. Kenneth Zadeck},
  title = 	 {How to analyze large programs efficiently and informatively},
  booktitle = 	 PLDI92,
  pages =	 {212-223},
  year =	 1992,
  address =	 {San Francisco, California},
  month =	 jun,
  url =		 {http://www.acm.org/pubs/citations/proceedings/pldi/143095/p212-dhamdhere/},
  annote =	 {``When an analytic mistake inherited from
                  \cite{cytron89:ssa} is corrected
                  \cite{cytron91:ssa}, the worst-case complexity for
                  constructing each sparse graph is $O(n^3)$.''}
}

%%%%%%%%%%%%%%%%% DERIVED WORKS %%%%%%%%%%%%%%%%%%%%%%%
% (Referenced in some source paper)

@Article{benveniste91:synchrony,
  author = 	 {A. Benveniste and G. Berry},
  title = 	 {The synchronous approach to reactive and real-time systems},
  journal = 	 {Proceedings of the IEEE: Another look at real time
                  programming},
  year = 	 1991,
  volume =	 79,
  number =	 9,
  pages =	 {1270-1282},
  month =	 sep,
  annote =	 {Referenced by \cite{berry92:hardware_esterel} as
                  source of the \textit{perfect synchrony hypothesis}.}
}
@Article{gagne96:nonstandard,
  author = 	 {Jean-Raymond Gagn{\'e} and John Plaice},
  title = 	 {A non-standard temporal deductive database system},
  journal = 	 {Journal of Symbolic Computation},
  year = 	 1996,
  volume =	 22,
  number =	 {5-6},
  pages =	 {649-664},
  month =	 nov # "--" # dec,
  annote =	 {Referenced by \cite{gagne97:nonstandard} to support
                  the idea of ``non-standard numbers'' in ennumerating
                  time.}
}

@InProceedings{galloway95:transmogrifier,
  author = 	 {David Galloway},
  title = 	 {The {Transmogrifier} {C} Hardware Description
                  Language and compiler for {FPGA}s},
  booktitle = 	 {IEEE Symposium on FPGAs for Custom Computing
                  Machines.  Proceedings},
  pages =	 {136-144},
  year =	 1995,
  month =	 apr
}

@Article{wegman91:scc,
  author = 	 {Mark N. Wegman and F. Kenneth Zadeck},
  title = 	 {Constant propagation with conditional branches},
  journal = 	 {ACM Transactions on Programming Languages and Systems},
  year = 	 1991,
  volume =	 13,
  number =	 2,
  pages =	 {181-210},
  month =	 apr
}

@InProceedings{shirazi95:float,
  author = 	 {Nabeel Shirazi and Al Walters and Peter Athanas},
  title = 	 {Quantitative Analysis of Floating Point Arithmetic
                  on {FPGA} based {C}ustom {C}omputing {M}achines},
  booktitle = 	 {IEEE Symposium on {FPGAs} for {C}ustom {C}omputing
                  {M}achines.  Proceedings},
  pages =	 {155-162},
  year =	 1995,
  address =	 {Napa Valley, California},
  month =	 apr
}


@Book{appel:modern,
  author = 	 {Andrew W. Appel},
  title = 	 {Modern Compiler Implementation in Java},
  publisher = 	 {Cambridge University Press},
  year = 	 {1998},
  annote =	 {The standard practical compilers text.}
}

@Book{jvm,
  author =	 {Tim Lindholm and Frank Yellin},
  title = 	 {The Java Virtual Machine Specification},
  publisher = 	 {Addison-Wesley},
  year = 	 1996,
  month =	 sep,
  note =	 {On-line at 
                  \texttt{http://\hspace{0pt}www.javasoft.com/\hspace{0pt}docs/\hspace{0pt}books/\hspace{0pt}vmspec}}
}

@Article{cytron91:ssa,
  author = 	 {Ron Cytron and Jeanne Ferrante and Barry K. Rosen
                  and Mark N. Wegman and F. Kenneth Zadeck},
  title = 	 {Efficiently computing static single assignment form
                  and the control dependence graph},
  journal = 	 TOPLAS,
  year = 	 1991,
  volume =	 13,
  number =	 4,
  pages =	 {451-490},
  month =	 oct,
  url =		 {http://www.acm.org/pubs/citations/journals/toplas/1991-13-4/p451-cytron/},
  annote =	 {One of the canonical SSA form papers.}
}

@InProceedings{cytron89:ssa,
  author = 	 {Ron Cytron and Jeanne Ferrante and Barry K. Rosen and
                  Mark N. Wegman and F. Kenneth Zadeck},
  title = 	 {An efficient method of computing static single
                  assignment form},
  booktitle = 	 POPL89,
  pages =	 {25-35},
  year =	 1989,
  address =	 {Austin, Texas},
  month =	 jan,
  url =		 {http://www.acm.org/pubs/citations/proceedings/plan/75277/p25-cytron/},
  annote =	 {The other canonical SSA form paper.}
}

@Article{cytron95:ssa,
  author = 	 {Ron K. Cytron and Jeanne Ferrante},
  title = 	 {Efficiently computing $\phi$-nodes on-the-fly},
  journal = 	 TOPLAS,
  year = 	 1995,
  volume =	 17,
  number =	 3,
  pages =	 {487-506},
  month =	 may,
  url =		 {http://www.acm.org/pubs/citations/journals/toplas/1995-17-3/p487-cytron/},
  annote =	 {Contains: ``Since one reason for introducing
                  $\phi$-functions is to eliminate potentially
                  quadratic behavior when solving actual data flow
                  problems, such worst-case behavior during SEG or SSA 
                  construction could be problematic.  Clearly,
                  avoiding such behavior necessitates placing
                  $\phi$-functions without computing or using
                  dominance frontiers.''}
}

@InProceedings{alpern88:ssa,
  author = 	 {B. Alpern and Mark N. Wegman and F. Kenneth Zadeck},
  title = 	 {Detecting equality of variables in programs},
  booktitle = 	 POPL88,
  pages =	 {1-11},
  year =	 1988,
  address =	 {San Diego, California},
  month =	 jan,
  annote =	 {Earliest SSA reference?},
  url =		 {http://www.acm.org/pubs/citations/proceedings/plan/73560/p1-alpern/}
}

@InProceedings{rosen88:gvn,
  author = 	 {Barry K. Rosen and Mark N. Wegman and F. Kenneth Zadeck},
  title = 	 {Global value numbers and redundant computations},
  booktitle = 	 POPL88,
  pages =	 {12-27},
  year =	 1988,
  address =	 {San Diego, California},
  month =	 jan,
  url =		 {http://www.acm.org/pubs/citations/proceedings/plan/73560/p12-rosen/}
}

@TechReport{plotkin81:opsem,
  author = 	 {Gordon D. Plotkin},
  title = 	 {A structural approach to operational semantics},
  institution =  {Aarhus University},
  year = 	 1981,
  number =	 {DAIMI FN-19},
  annote =	 {Referenced in \cite{pingali90:dfg}}
}

@TechReport{shapiro70:ssa,
  author = 	 {Robert M. Shapiro and H. Saint},
  title = 	 {The representation of algorithms},
  institution =  {Massachusetts Computer Associates},
  year = 	 1970,
  number =	 {CA-7002-1432},
  month =	 feb,
  annote =	 {Referenced in \cite{johnson93:dfg} as the original SSA form
                  paper}
}

@InProceedings{chow96:hssa,
  author = 	 {Fred Chow and Sun Chan and {Shin-Ming} Liu and 
                  Raymond Lo and Mark Streich},
  title = 	 {Effective representation of aliases and indirect
                  memory operations in {SSA} form},
  booktitle = 	 {Proceedings of the Sixth International Conference on
                  Compiler Construction},
  pages =	 {253-267},
  year =	 1996,
  month =	 apr,
  annote =	 {Referenced in \cite{chow97:ssapre} for HSSA form;
                  also documentation of SGI's use of SSA-variant in
                  their production MIPSpro compiler (release 7.2).}
}

@InProceedings{ballance90:pdw,
  author = 	 {Robert A. Ballance and Arthur B. Maccabe and Karl
                  J. Ottenstein},
  title = 	 {The {P}rogram {D}ependence {W}eb: A representation
                  supporting control-, data-, and demand-driven
                  interpretation of imperative languages},
  booktitle = 	 PLDI90,
  pages =	 {257-271},
  year =	 1990,
  address =	 {White Plains, New York},
  month =	 jun,
  annote =	 {PDW canonical reference.},
  url =		 {http://www.acm.org/pubs/citations/proceedings/pldi/93542/p257-ottenstein/}
}

@InProceedings{tu95:gssa,
  author = 	 {Peng Tu and David Padua},
  title = 	 {Efficient building and placing of gating functions},
  booktitle = 	 PLDI95,
  pages =	 {47-55},
  year =	 1995,
  address =	 {La Jolla, California},
  month =	 jun,
  annote =	 {Efficiently constructing GSSA form.},
  url = 	 {http://www.acm.org/pubs/citations/proceedings/pldi/207110/p47-tu/}
}

@Article{reif81:sym,
  author = 	 {J. H. Reif and R. E. Tarjan},
  title = 	 {Symbolic program analysis in almost-linear time},
  journal = 	 {{SIAM} Journal on Computing},
  year = 	 1981,
  volume =	 11,
  number =	 1,
  pages =	 {81-93},
  month =	 feb,
  annote =	 {Introduction of ``birthpoints,'' which Havlek
                  \cite{havlak94:isa} claims was the direct ancestor
                  of SSA form.}
}

%%%% Misc.

@Misc{marinov99,
  author =	 {Darko Marinov},
  title =	 {Personal communication},
  year =	 1999
}
