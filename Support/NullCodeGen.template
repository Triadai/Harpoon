package harpoon.PACKAGE;

import harpoon.IR.Assem.Instr;
import harpoon.Temp.Temp;

/**
 * <code>NullCodeGen</code> does nothing.
 * 
 * @author  C. Scott Ananian <cananian@alumni.princeton.edu>
 * @version $Id: NullCodeGen.template,v 1.1.2.13 2000-03-24 19:42:27 cananian Exp $ */
public class NullCodeGen extends harpoon.Backend.Generic.CodeGen {
    // a constructor here corresponding to every type of codegen
    //  constructor we have
    /*    public NullCodeGen() { super(null); } */
    public NullCodeGen(harpoon.Backend.Generic.Frame f) { super(f); }
    public NullCodeGen(harpoon.Backend.StrongARM.Frame f,boolean b) {super(f);}
    public harpoon.Analysis.Maps.Derivation getDerivation() {
        return null;
    }   
    protected void declare(Temp t, harpoon.ClassFile.HClass hc) {}   
    protected void declare(Temp t, 
		           harpoon.Analysis.Maps.Derivation.DList dl) {}       
    public java.util.List genCode(harpoon.IR.Tree.Code tree, 
			 harpoon.IR.Assem.InstrFactory inf) {
	return null;
    }
    public Instr genData(harpoon.IR.Tree.Data tree, 
			 harpoon.IR.Assem.InstrFactory inf) {
	return null;
    }
    protected Instr emit(Instr i) { return null; }
    public NullCodeGen(harpoon.PACKAGE.Frame f) { super(f); }
    public Instr procFixup(harpoon.ClassFile.HMethod hm,
		           Instr instr,
			   int stackspace,
			   java.util.Set usedRegisters) {
	return instr;
    }
}
