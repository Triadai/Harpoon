%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: Linux-ext2.dvi
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips Linux-ext2.dvi -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.07.26:1638
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (Linux-ext2.dvi)
@start
%DVIPSBitmapFont: Fa cmti10 10 14
/Fa 14 118 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>12 D<120EEA3F80127F12FFA31300127E123C0909778819>46
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F
80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A127EA214
0F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07
C0381E1F80D80FFEC7FCEA01F01C3B77B926>98 D<147F903803FFC090380FC1E090381F
0070017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA212
7F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E
00380F81F83803FFE0C690C7FC1D2677A426>I<147F903803FFC090380FC1E090383F00
F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00
EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB
0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>101 D<EC07C0EC3FF09138FC
38E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE49
14C01201151F1203491480A2153F1207491400A25DA249137EA215FEA25D000313011403
14076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E
131F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>103
D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFC
EC783E9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F00071500
5BA25D000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A2167048
14E0007E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB
03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015F0
9039FE01C1F09038FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC0003
5BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F809039
801F81C0A21583003F013F138001001303A21507481500007E133EEC1E0E151E00FE6D5A
48EB07F80038EB01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F1480A2133FA21400
A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2
123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE012
1FEA0F80123B79B915>I<147F903803FFC090380FC1F090381F00F8017E137C5B484813
7E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC
5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F038
03FFC0C648C7FC202677A42A>111 D<9039078007C090391FE03FF090393CF0787C9039
38F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143F
A25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48
C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B5
12C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038
383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035B
A312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F
007815C01270013F131F00F0130000E015805BD8007E133FA201FE14005B5D120149137E
A215FE120349EBFC0EA20201131E161C15F813E0163CD9F003133814070001ECF0709138
1EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D>117
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr8 8 35
/Fb 35 121 df<B512C0A412047F9018>45 D<123C127E12FFA4127E123C08087A8714>
I<15C0140114031580A214071500A25C140EA2141E141CA2143C143814781470A214F05C
A213015CA213035C130791C7FCA25B130EA2131E131CA2133C1338A21378137013F05BA2
12015BA212035BA2120790C8FC5A120EA2121E121CA2123C1238A212781270A212F05AA2
1A437CB123>I<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A2
48EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C0
3E3803F0FC3800FFF0EB3FC01C2D7DAB23>I<130C133C137CEA03FC12FFEAFC7C1200B3
B113FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB
0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC
3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E
14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E48
7FEC1F80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFF
C014F0EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F80060
14C00070131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<000CEB
0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7FF8380DE07C38
0F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA448EB07E012E0
006014C00070130F6C14806CEB1F006C133E380780F83801FFE038007F801C2D7DAB23>
53 D<EB1FC0EBFFF03803E07C3807801E48487E001EEB0780A248EB03C0A4123E140700
3F1480381FC00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FF
D807831380D81F0013C0001E133F48EB1FE0007C13070078EB03F012F84813011400A46C
14E000781301007C14C0003C13036CEB0780390F800F003807E03C3801FFF038003FC01C
2D7DAB23>56 D<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E14
C0127C00FC14E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F3
3800FFC390383F03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B00
1C5B380E03E03807FF80D801FEC7FC1C2D7DAB23>I<123C127E12FFA4127E123C1200AD
123C127E12FFA4127E123C081D7A9C14>I<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC
30FCA2EC70FEEC607EA24A7EA349486C7EA2010380EC000FA201066D7EA3496D7EA2011F
B57EA29038180001496D7EA349147EA201E0147F4980A20001ED1F801203000716C0D80F
F0EC3FE0D8FFFC0103B5FCA2302F7EAE35>65 D<B712FEA23903F800010001EC003E8282
82A282A3178016011518A293C7FCA31538157815F890B5FCA2EBF800157815381518A217
60A392C712C0A4160117801603A21607160F163F0003913801FF00B8FCA22B2D7EAC30>
69 D<90383F80303901FFF0703807C07C390F000EF0001E130748130348130114001270
00F01470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF00011480D8
003F13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C
14F06CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>83
D<B539F003FFFCA2D803FCC7EA3FC06C48EC0F001606B3AB160E0000150C7F161C017C14
18017E14386D5C6D146090390F8001E0903907E00380902601F80FC7FC9038007FFCEC0F
F02E2E7DAC35>85 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FC
A4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E13
7F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F207D9E23>97
D<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB0F00007E90C7
FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E007003801F03E38007F
F8EB1FC01A207E9E1F>99 D<15F8141FA214011400ACEB0FE0EB7FF83801F81E3803E007
3807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017EEB8003000F
13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB1F80EBFFF0
3803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200
FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801F03C38007F
F8EB1FC01A207E9E1F>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C1400AA
B512E0A23803E000B3A6487E387FFF80A2182F7FAE16>I<013F13F89038FFC3FE3903E1
FF1E3807807C000F140C391F003E00A2003E7FA76C133EA26C6C5A00071378380FE1F038
0CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814FF6C14C04814F0391E0007F8481300
48147C12F848143CA46C147C007C14F86CEB01F06CEB03E03907E01F803901FFFE003800
3FF01F2D7E9D23>I<EA07C012FFA2120F1207AC14FE9038C3FF809038C703E09038DE01
F013F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA
1FE0A4EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14
>I<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFEA20F2E7EAD14>108
D<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8E01F803B07DC00F9C0
0F01F8D9FF8013C04990387F000749137EA249137CB2486C01FEEB0FE03CFFFE0FFFE0FF
FEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703E0390FDE01F0EA07F8496C7EA25B
A25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF83801F03E3803C00F39
07800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FCA9007C14F8A26CEB01
F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB1FE01E207E9E23>I<
3807C0FE39FFC7FF809038CF03E0390FDC01F03907F800FC49137E49133E49133FED1F80
A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D9038FC01F09038CE07E09038C7FF80
D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>I<90380FE01890387FF8383801F8
1C3903E00E783807C007390F8003F8001F1301EA3F00A2007E1300A212FE5AA8127EA36C
13017EEB8003380FC0073803E00E3801F03C38007FF0EB1FC090C7FCA94A7E91381FFFC0
A2222B7E9D25>I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0
487EB5FCA2181E7E9D1C>I<3801FE183807FFB8381E01F8EA3C00481378481338A21418
A27E7EB41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C
131EA27EA26C133CA26C137838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0
A312011203A21207121FB512F0A23803E000AF1418A714383801F03014703800F860EB3F
E0EB0F80152A7FA81B>I<D807C013F800FF131FA2000F130100071300B21401A3140338
03E007EC0EFC3A01F81CFFC038007FF890391FE0F800221F7E9D27>I<3BFFFC3FFE07FF
A23B0FE003F001F801C09038E000F00007010114E0812603E00314C0A2913807F8012701
F006781380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA2168C
90391F600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>119
D<3AFFFC07FF80A23A0FF003FC000003EB01F0000114C06D485A000091C7FCEB7C06EB3E
0E6D5A14B8EB0FB0EB07E013036D7E497E1307EB067C497EEB1C1F01387FEB700F496C7E
6E7ED803C07F00076D7E391FE003FC3AFFF007FFC0A2221D7F9C25>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy6 6 1
/Fc 1 4 df<136013701360A20040132000E0137038F861F0387E67E0381FFF803807FE
00EA00F0EA07FE381FFF80387E67E038F861F038E060700040132000001300A213701360
14157B9620>3 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 10 1
/Fd 1 16 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmtt10 10 67
/Fe 67 126 df<010F133C90381F807EA8013F13FE4A5AA4007FB612F0B712F8A4003F15
F03A007E01F800A5EBFE0301FC5BA6003FB612F0B712F8A46C15F03A01F807E000A30003
130F01F05BA86C486C5A25337DB22C>35 D<143814FC13011303EB07F8EB0FF0EB1FC0EB
3F80EB7F0013FE485A485A5B12075B120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E
127EA3127F7EA27F121FA26C7E7F12077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB
07F8EB03FC130113001438164272B92C>40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E
6C7E6C7E137F7F1480131F14C0130FEB07E0A214F01303A214F81301A314FC1300AC1301
14F8A3130314F0A2130714E0A2EB0FC0131F1480133F14005B13FE485A485A485A485AEA
3FC0485A48C7FC5A5A1270164279B92C>I<EB0380497EA60020140800F8143E00FE14FE
00FF13C1EBC7C7EBE7CF003FB512F8000F14E0000314806C140038007FFCA248B5FC4814
80000F14E0003F14F839FFE7CFFEEBC7C7EB07C100FE13C000F8143E0020140800001400
A66D5A1F247AAA2C>I<147814FCAF007FB612F0B712F8A46C15F0C700FCC7FCAF147825
267DAB2C>I<EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA
03F01207EA1FE0EA7FC0EAFF80130012FC12700E17718A2C>I<1507ED0F80151FA2153F
16005D157E15FE5D14015D14035DA214075D140F5D141F5D143F92C7FC5C147E14FE5CA2
13015C13035C13075C130F5C131F5CA2133F91C8FC5B137E13FE5B12015B12035B12075B
A2120F5B121F5B123F90C9FC5A127E12FE5AA25A127821417BB92C>47
D<EB03F8EB0FFE90383FFF80497F90B57E3901FE0FF03903F803F848486C7EEBE0004848
137EA248487FA248C7EA1F80A2003E140F007E15C0A3007C140700FC15E0AC6C140F007E
15C0A46CEC1F80A36C6CEB3F00A26C6C137E6D13FE00075CEBF0016C6C485A3901FE0FF0
6CB55A6D5B6D5BD90FFEC7FCEB03F823357CB32C>I<1307497EA2131FA2133F137F13FF
5A1207127FB5FC13DF139FEA7C1F1200B3AE007FB512E0B612F0A36C14E01C3477B32C>
I<EB0FF890387FFF8048B512E00007804814FC391FF80FFE393FE001FF903880007F48C7
EA3F80007E141F00FE15C0150F6C15E01507A3127E123CC8FCA2150F16C0151F1680153F
16005D15FE4A5A14034A5A4A5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0EB7F80
49C8FC485A4848EB03C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB32C>I<
EB0FFC90387FFF8048B512E0000714F84880391FF807FEEBC0004848137F6D7F1680151F
A26C5A6CC7FCC8FC153F16005D15FE14014A5AEC1FF890381FFFF0495BA215F86D7F9038
0007FEEC00FF81ED3F80ED1FC0150FA216E01507A2123C127EB4FC150F16C0A248141F00
7FEC3F806DEB7F006C6C5B391FF807FE6CB55A6C5C6C14E0C66C1380D90FFCC7FC23357C
B32C>I<EC07F04A7E141F143FA2147EA214FCEB01F8A2EB03F0EB07E0A2EB0FC0EB1F80
A2EB3F00137EA25B485AA2485A5B1207485AA2485A48C7FCA2127E5AB712FC16FEA36C15
FCC8EAF800AA91387FFFF091B512F8A36E13F027347EB32C>I<000FB512FE4880A35D01
80C8FCADEB83FE90389FFF8090B512E015F8819038FE03FE9038F000FF01C07F49EB3F80
90C7121F6C15C0C8120FA2ED07E0A4123C127EB4FC150F16C0A248141F007EEC3F80007F
EC7F006C6C5B6D485A391FF80FFC6CB55A6C5C000114C06C6C90C7FCEB0FF823347CB22C
>I<EC3FC0903801FFF801077F011F7F497F90387FE07F9039FF003F804848137FEA03F8
485A5B000FEC3F004848131E4990C7FC123F90C9FCA25A127EEB03FE90381FFF80D8FC7F
13E000FDB57EB67E9038FE07FC9038F001FE9038C0007F49EB3F8090C7121F16C048140F
16E01507A3127EA47E150F6D14C0001F141F6D1480000F143F6DEB7F003907F801FE3903
FE07FC6CB55A6C5C6D5B011F1380D907FCC7FC23357CB32C>I<EB07FC90383FFF8090B5
12E0000314F84880390FFC07FE391FF001FF9038C0007F4848EB3F8090C7121F4815C000
7E140FA56CEC1F80A26C6CEB3F006D5B390FF001FE3903FC07F86CB55A6C6C13C0D907FC
C7FC90387FFFC048B512F03903FC07F8390FF001FE391FC0007F497F48C7EA1F80007EEC
0FC0A248EC07E0A7007EEC0FC0A2007F141F6C6CEB3F806C6CEB7F009038F001FF390FFC
07FE6CB55A6C5CC614E0013F1380D907FCC7FC23357CB32C>56 D<EB07FCEB3FFF90B512
C0488048803907FC07F8390FF001FC48486C7ED83F80137E157F48C77E007EEC1F8012FE
5AED0FC0A416E0A37E127E007F141F7E6D133F6C6C137F390FF001FF3807FC0F6CB6FC6C
14F76C14C7013F130FD90FF813C090C7FCA2151F1680153F1600000F5C486C137E486C13
FE4A5A4A5A14079038801FF0391FE07FE090B55A6C91C7FC6C5B000113F838007FC02335
7CB32C>I<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0EA1FC0EA0F80C7FCAEEA0F80EA1FC0
EA3FE0127F13F0A4123F121F120F1201120313E01207EA0FC0A2EA3F80EA7F005A5A12F8
12700C3071A32C>59 D<14FE497EA4497FA214EFA2130781A214C7A2010F7FA314C39038
1F83F0A590383F01F8A490387E00FCA549137E90B512FEA34880A29038F8003FA34848EB
1F80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E27347EB32C>65
D<007FB512E015F8B612FE6C8016C03903F0003FED0FE0ED07F01503A2ED01F8A6ED03F0
A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C09039F0001FE0ED07F0ED03F81501
ED00FCA216FE167EA616FE16FC1501ED03F8150FED3FF0007FB612E016C0B712806CECFE
0015F027337FB22C>I<02FF13700107EBE0F84913F9013F13FD4913FFEBFF813901FE00
7F4848131FD807F0130F1507485A491303485A150148C7FCA25A007EEC00F01600A212FE
5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C13036D14F06C6C130716E0D803FC131F
6C6CEB3FC03A00FF81FF806DB512006D5B010F5B6D13F00100138025357DB32C>I<007F
B5FCB612C015F0816C803907E003FEEC00FFED7F80153FED1FC0ED0FE0A2150716F01503
16F81501A4ED00FCACED01F8A3150316F0A2150716E0150FED1FC0153FED7F80EDFF00EC
03FE007FB55AB65A5D15C06C91C7FC26337EB22C>I<007FB612F0B712F8A37E3903F000
01A7ED00F01600A4EC01E04A7EA490B5FCA5EBF003A46E5A91C8FCA5163C167EA8007FB6
12FEB7FCA36C15FC27337EB22C>I<007FB612F8B712FCA37ED803F0C7FCA716781600A5
15F04A7EA490B5FCA5EBF001A46E5A92C7FCAD387FFFE0B5FC805C7E26337EB22C>I<90
3901FC038090390FFF87C04913EF017F13FF90B6FC4813073803FC01497E4848137F4848
133F49131F121F5B003F140F90C7FCA2127EED078092C7FCA212FE5AA8913803FFF84A13
FCA27E007E6D13F89138000FC0A36C141FA27F121F6D133F120F6D137F6C7E6C6C13FF6D
5A3801FF076C90B5FC6D13EF011F13CF6DEB0780D901FCC7FC26357DB32C>I<D87FFEEB
FFFCB54813FEA36C486C13FCD807E0EB0FC0B190B6FCA59038E0000FB3D87FFEEBFFFCB5
4813FEA36C486C13FC27337EB22C>I<007FB512F8B612FCA36C14F839000FC000B3B3A5
007FB512F8B612FCA36C14F81E3379B22C>I<D87FFCEB7FF8486CEBFFFCA36C48EB7FF8
D807C0EB1F80153FED7F00157E5D4A5A14034A5A5D4A5A4A5A143F4AC7FC147E5CEBC1F8
13C3EBC7FCA2EBCFFEEBDFBEEBFFBF141F01FE7F496C7E13F86E7EEBF00301E07FEBC001
816E7EA2157E153E153F811680ED0FC0A2ED07E0D87FFCEB1FFC486CEB3FFEA36C48EB1F
FC27337EB22C>75 D<387FFFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8007FB6FCB7
FCA36C15F025337DB22C>I<D87FE0EB0FFC486CEB1FFEA26D133F007F15FC000F15E001
BC137BA4019E13F3A3EB9F01A2018F13E3A21483A2018713C314C7A201831383A214EFA2
01811303A214FFEB80FEA3147C14381400ACD87FF0EB1FFC486CEB3FFEA36C48EB1FFC27
337EB22C>I<D87FF0EB7FFC486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA213DF13
CFA2148013C714C0A213C314E0A213C114F0A213C014F8A2147CA3143EA2141E141FA214
0F1587A2140715C7A2140315E71401A215F71400A215FFD87FFC137F487E153FA26C48EB
1F8027337EB22C>I<EB7FFF0003B512E0000F14F848804880EBE003EB800048C7127FA2
007E80A300FE158048141FB3A86C143FA2007E1500A3007F5CA26C6C13FEEBF00790B5FC
6C5C6C5C000314E0C66C90C7FC21357BB32C>I<387FFFFCB67E15E015F86C803907E007
FE1401EC007F6F7E151FA26F7EA64B5AA2153F4BC7FCEC01FE140790B55A5D15E0818190
38E007FCEC01FE1400157F81A8160FEE1F80A5D87FFEEB1FBFB5ECFF00815E6C486D5AC8
EA01F029347EB22C>82 D<90381FF80790B5EA0F804814CF000714FF5A381FF01F383FC0
03497E48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1FFC
EBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED1F
C0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF90
B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB32C>I<007FB612FCB712FEA43AFC
007E007EA70078153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>I<3B7FFF80
3FFFC0B56C4813E0A36C496C13C03B03F00001F800B3AF6D130300015DA26D130700005D
6D130F017F495A6D6C485AECE0FF6DB5C7FC6D5B010313F86D5B9038003F802B3480B22C
>I<3A3FFF03FFE0484913F0148714076C6D13E03A01F800FE007F0000495A13FE017E5B
EB7F03013F5B1487011F5B14CF010F5B14FF6D5BA26D90C7FCA26D5AA26D5AA2497EA249
7EA2497F81EB0FCF81EB1FC7EC87F0EB3F83EC03F8EB7F01017E7FEBFE00497F0001147E
49137F000380491480151FD87FFEEBFFFC6D5AB514FE6C15FC497E27337EB22C>88
D<D87FFCEB7FFC486CEBFFFEA36C48EB7FFCD807F0EB0FC0151F000315806D133F12016D
EB7F0012006D137E017E13FE017F5BEB3F01EC81F8131FEC83F0EB0FC314C7903807E7E0
A201035B14EF6DB45AA292C7FC7F5C147EB0903807FFE0497FA36D5B27337EB22C>I<00
3FB612C04815E0A4007EC7EA1FC0ED3F80A2ED7F00157E15FE4A5A003C5CC712034A5AA2
4A5A4A5AA24A5A4AC7FCA214FE495AA2495A495AA2495A495AA2495A49C8FCA213FE485A
A24848EB03C049EB07E01207485A5B121F485AA248C7FCB7FCA46C15C023337CB22C>I<
387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC17416FB92C>I<387FFF
FCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C>93
D<007FB6FCB71280A46C150021067B7D2C>95 D<3801FFF0000713FE001F6D7E15E04880
9038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F48EB
807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE6C
14BF0001EBFE1F3A003FF007FC27247CA32C>97 D<EA7FF0487EA3127F1201AAEC1FE0EC
FFF801FB13FE90B6FC16809138F07FC09138801FE091380007F049EB03F85BED01FC4913
00A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091
B51280160001FB5B01F813F83900F03FC027337FB22C>I<903803FFE0011F13F8017F13
FE48B5FC48804848C6FCEA0FF0485A49137E4848131890C9FC5A127EA25AA8127EA2127F
6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E00103
90C7FC21247AA32C>I<EC0FFE4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF5A38
07FC0F380FF00348487E497E48487F90C7FC007E80A212FE5AA87E007E5CA2007F5C6C7E
5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE6C143FEB3FFC90390FF01FFC27337DB2
2C>I<EB03FE90381FFFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB3F80
5B4848EB1FC090C7120F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6CEC03
C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC010F
13F00101138023247CA32C>I<EC0FF8EC3FFE91B5FC4914805B903807FC7F14F090390F
E03F0014C092C7FCA6007FB512FEB7FCA36C5C26000FC0C7FCB3A8003FB512F04880A36C
5C21337DB22C>I<ED03F8903907F80FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F9038
FC0FF82607F003133E3A0FE001FC1CD9C0001300001F8049137EA66D13FE000F5CEBE001
6C6C485A3903FC0FF048B5FC5D481480D99FFEC7FCEB87F80180C8FCA37F6C7E90B512F0
6C14FE48ECFF804815E04815F03A3FC0001FF848C7EA03FC007E1400007C157C00FC157E
48153EA46C157E007E15FCD87F801303D83FE0EB0FF8D81FFCEB7FF06CB612E000031580
6C1500D8003F13F8010713C028387EA42C>I<EA7FF0487EA3127F1201AAEC1FE0EC7FFC
9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FC
B500F11480A36C01E0140029337FB22C>I<1307EB1FC0A2497EA36D5AA20107C7FC90C8
FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C>I<EA
7FE0487EA3127F1201AA91381FFFF04A13F8A36E13F0913800FE004A5A4A5A4A5A4A5A4A
5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90B5FCA2EC9F80EC0FC001FE7FEBFC07496C7E49
6C7E811400157E811680151F3A7FFFC0FFFCB500E113FEA36C01C013FC27337EB22C>
107 D<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C158022337BB22C>I<
3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD87FFF13FF91B57E3A07FE1FFC3E01FCEBF8
3F496C487E01F013E001E013C0A301C01380B33B7FFC3FF87FF0027F13FFD8FFFE6D13F8
D87FFC4913F0023F137F2D2481A32C>I<397FF01FE039FFF87FFC9038F9FFFE01FB7F6C
B6FC00019038F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C
01E0140029247FA32C>I<EB07FCEB1FFF017F13C048B512F048803907FC07FC390FF001
FE48486C7E0180133F003F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15C0A2
007F141F6C15806D133F6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C001
1F90C7FCEB07FC23247CA32C>I<397FF01FE039FFF8FFF801FB13FE90B6FC6C15800001
9038F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14
FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813
F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA32C>I<D87FFEEB3FC0B53801FFF002
0713F8021F13FC6C5B39003F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FC
AF007FB512E0B67EA36C5C26247EA32C>114 D<90387FF8700003B512F8120F5A5A387F
C00F387E00034813015AA36CEB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0
C66C13F8010113FCEB0007EC00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE90
38F007FC90B5FC15F815E000F8148039701FFC0020247AA32C>I<131E133FA9007FB6FC
B71280A36C1500D8003FC8FCB1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB5128016
0001035B6D13F89038003FE0232E7EAD2C>I<3A7FF003FF80486C487FA3007F7F0001EB
000FB3A3151FA2153F6D137F3900FE03FF90B7FC6D15807F6D13CF902603FE0713002924
7FA32C>I<3A7FFF01FFFCB514FE148314016C15FC3A03E0000F80A26D131F00011500A2
6D5B0000143EA26D137E017C137CA2017E13FC013E5BA2EB3F01011F5BA21483010F5BA2
14C701075BA214EF01035BA214FF6D90C7FCA26D5A147C27247EA32C>I<D87FFFEB7FFF
6EB5FCB515806C16004A7ED807C0EB01F0A66C6C495AA3143E147FA2D801F0495AECFF87
A214F7A201F113C700005D9038F9E3CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2
013F5B90381F007C29247FA32C>I<3A3FFF03FFF048018713F8A36C010313F03A00FC00
7E005D90387E01F8013F5BEB1F83EC87E090380FCFC0903807EF80EB03FF6D90C7FC5C6D
5A147C14FE130180903803EF80903807CFC0EB0FC7EC83E090381F01F0013F7FEB7E0001
7C137C49137E0001803A7FFF01FFFC1483B514FE6C15FC140127247EA32C>I<3A7FFF01
FFFCB5008113FE148314816C010113FC3A03E0000F806C7E151F6D140012005D6D133E13
7C017E137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C013
0114F75DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87
E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>I<003FB612E04815F0
A4007EC7EA1FE0ED3FC0ED7F80EDFF004A5A003C495AC7485A4A5A4A5A4A5A4A5A4AC7FC
EB01FC495AEB0FF0495A495A495A49C8FC4848EB01E04848EB03F0485A485A485A485A48
5AB7FCA46C15E024247DA32C>I<15FF02071380141F147F91B512004913C04AC7FCEB03
F85CB31307EB1FE013FF007F5BB55A49C8FC6D7E6C7FC67F131FEB07F01303B380EB01FE
ECFFC06D13FF6E1380141F14070200130021417BB92C>I<EA7FC0EAFFF813FE6D7E6C7F
C67F131FEB07F01303B380EB01FEECFFC06D13FF6E1380141F147F91B512004913C04AC7
FCEB03F85CB31307EB1FE013FF007F5BB55A49C8FC13F8EA7FC021417BB92C>125
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx12 12 20
/Ff 20 118 df<B9FC18F018FE727E19E026003FFCC700077F05017F716C7E727E727EA2
721380A37213C0A74E1380A24E1300A24E5A4E5A4E5A4D5B05075B94B5128091B700FCC7
FC18F018FF19E002FCC7000113F8716C7EF01FFE727E7213801AC07213E0A27213F0A31A
F8A71AF0A2601AE0604E13C0604E138095B5120005075BBA12F86119C04EC7FC18E04544
7CC350>66 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E0
01FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849
163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C8FC12FFAD05
7FB612F0127F7FA3003FDC0001EBF000A27F7EA26C7FA26C7F807E6C7F6C7F6D7E6D6C5D
6D6C7E6D6D5C6D01F05C010101FE143F6D903AFFF001FF9F023F90B6120F0207EDFC0302
01EDF000DA001F02C01330030001FCC9FC4C467AC458>71 D<B712E0A5D8001F90C7FCB3
B3B3A4B712E0A523447DC32A>73 D<DAFFE0131C010701FE133C013F9038FF807C90B6EA
E0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848140F491407007F1503
5B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15
E016FC6C816C6F7E6C826C826C6C81011F810107811300020F80140003077FED007F8204
0F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC
3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F0480107138031467AC43E
>83 D<003FBA12E0A59026FE000FEB8003D87FE09338003FF049171F90C71607A2007E18
03007C1801A300781800A400F819F8481978A5C81700B3B3A20107B8FCA545437CC24E>
I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<137C48B4FC4813804813
C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6
FCA518467CC520>105 D<EB7FC0B5FCA512037EB293387FFFE0A593380FE0004C5A4CC7
FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF91B57E82A2
02F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163FB60003B512
F8A535457DC43B>107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>I<9027
7F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01F
FC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC
5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<9039
7F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F000390399F000F
FE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B5
12C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248
486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA200
1F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F
14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF
14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013
F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E
495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC
3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC
14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114
D<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601
E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13
FC01015B9038003FE023407EBE2C>116 D<D97FC049B4FCB50103B5FCA50003EC000F6C
81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F1407010313
FE9026007FF0EBFC00372E7CAC3E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr10 10 53
/Fg 53 123 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E>12 D<146014E0EB01C0EB0380EB0700130E131E5B5B
A25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2
121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E0146013
5278BD20>40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E
131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E13
3C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<121C127F
EAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A1979
8817>44 D<121C127FEAFF80A5EA7F00121C0909798817>46 D<EB03F8EB1FFF90387E0F
C09038F803E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0
A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C
6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>48
D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>
I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E
126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A
92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A00
0EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF039
03C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A
5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A215
3F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E39
0F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8
A2140114031407A2140F141F141B14331473146314C313011483EB030313071306130C13
1C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C7
3803F800AB4A7E0103B512F8A325397EB82A>I<EB03F8EB1FFF017F13C09038FC07F039
01E001F848486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C
6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F
13F801F07F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C14
3F0078EC0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C
131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>56
D<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48486C7E49137E121F4848
7FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907
E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D00
0F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC0001
13F038003FC0233A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80
A5EA7F00121C092479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380
A4127F121D1201A412031300A25A1206A2120E5A121812385A1260093479A317>I<1538
A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202
387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106810107
B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02
071380B56C90B512FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7
EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FC
A291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F
16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020F
EBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB
00FF49C8127F01FE153F12014848151F4848150FA248481507A2485A1703123F5B007F16
01A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E
6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7
FC9039007FFFFC020F13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF
806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07
F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE
3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C90C712
01EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC
000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F
486D903807FF00B9FCA333397DB839>I<B812F8A30001903880001F6C90C71201EE00FC
177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F
15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001
023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F
49C8121F485A4848150F48481507A248481503A2485A1701123F5B007F1600A448481600
AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F
6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC0002
0F01F0130002001380383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5A
B3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0
006D5AB3B3AD497EB612C0A31A397EB81E>I<B612E0A3000101C0C8FC6C90C9FCB3AD17
18A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>76
D<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9
C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C
1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED
1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB8
4C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2
EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E015
3FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA2
16071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E
>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283
A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE
82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306
933800FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903
F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC15
01A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC68001
3F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A3
7EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E0
3FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001
FE130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3B09138
07FF80011FB612E0A335397DB83C>I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0
486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA
1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0F
E0781FF03A03FFF00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC
1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85B
ED00FCA216FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB
0FC09039C7801F00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF
8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848
EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C
6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC00
3F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848
130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6C
EBEFF03A01F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1F
FF90387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E
5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C1306000714
0E6D131CD801F013386C6C137090387E03E090381FFF80903803FC0020277EA525>I<14
7E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512
FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC
3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C
6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C0
6CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8
481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC
39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF0
3F9039F1C01F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B512
80A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203
B3AA487EB512C0A312387EB717>I<EA03F012FFA3120F1203B1913801FFFCA39138007F
C01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF8
1F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA328
3A7EB92C>107 D<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F0
0FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F
802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1
B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF380
0FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB
03FE90380FFF8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C0
90C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0F
C0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC
25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803
FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816
F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB48
7EB512C0A328357EA42E>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA
03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>114
D<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7F
E013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303
A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A5
1338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580
EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000F
EB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790
381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E000
03EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A2
6D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257E
A32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB01
80A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A158302
81EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903
FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538
807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B
6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F09038
0703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B512
80A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F
00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2
D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391
C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E
0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C648
5A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B4848130C4848131C
A24848133C48C7127C48EB03FC90B5FCA21F247EA325>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmsy8 8 1
/Fh 1 4 df<130C131EA50060EB01800078130739FC0C0FC0007FEB3F80393F8C7F0038
07CCF83801FFE038007F80011EC7FCEB7F803801FFE03807CCF8383F8C7F397F0C3F8000
FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C9E23>3
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr12 12 25
/Fi 25 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A1206120E5A5A5A12600B1D78891B>44 D<14FF010713E090381F81F89038
3E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F15
F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A2
6C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81
F8903807FFE0010090C7FC28447CC131>48 D<EB03FE90381FFFC0017F13F03901F80FFC
3903C001FE48486C7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F8006014
07126CB415FC7F7F1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED
7F8016005D5D4A5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E
5B013814185B5B485A4848143848C81230000E1570001FB612F0A25A5AB712E0A326427B
C131>50 D<49B4FC010F13E0013F13FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA
1FE0120EED0FF0EA0FE0486C14F8A215077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED
3FC01680ED7F0015FE4A5AEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED
1FC0ED0FE016F0ED07F816FC150316FEA2150116FFA3121EEA7F80487EA416FE491303A2
007EC713FC00701407003015F80038140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A
01FE01FE0039007FFFF8010F13E0010190C7FC28447CC131>I<B8FC17F017FC00019039
C00007FF6C499038007FC0017FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E
85180385A2180185A38584A31A80AD1A00A36061A361180361180761180F614E5A183F61
4EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447C
C34B>68 D<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018781838A2181CA3
180CA4180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C163C16
1CA2160CA793C8FCB08048487EB612F8A337447CC340>70 D<010FB512FEA3D900031380
6E130080B3B3AB123F487E487EA44A5A13801300006C495A00705C6C13076C5C6C495A6C
EB1F802603E07FC7FC3800FFFCEB1FE027467BC332>74 D<B612F8A3000101E0C9FC6C6C
5A5CB3B31830A418701860A518E0A3EF01C0A217031707A2170F173F177FEE01FF48486C
011F1380B9FCA334447CC33D>76 D<49B41303010FEBE007013F13F89039FE00FE0FD801
F8131FD807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282
A37E82A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C
15C0013F14F0010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F16
1F17E000C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05C
D8F9F0495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC5
36>83 D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F
4848EB1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA212
3F16307F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E
90381FC078903807FFF001001380242E7DAC2B>99 D<EB01FE903807FFC090381F03F090
387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E01507A2007F15
F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C
14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC24
2E7DAC2B>101 D<EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C
133F495AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467E
C51E>I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802
707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F
457DC436>104 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712
031201B3B0487EB512F8A315437DC21C>I<EA01FC12FFA3120712031201B3B3B3A5487E
B512F8A315457DC41C>108 D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801
E07F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F
38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003
B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F8000701
707F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13
FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D
7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680
A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C49
5A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00FF90
380FFF8091383C07E091387001F83A07FDE000FE00030180137FD801FFEC3F8091C7EA1F
C04915E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15
E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FC
C7FC91C9FCAE487EB512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C3EEC707F00
07EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C
7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C
1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C0
6C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C
147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>
I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A415
0CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F
001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212
006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F80
13002F2D7DAB36>I<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC013F5C6E
13E06D7E010F495A6D6C485A02F890C7FC903803FC060101130E6E5A903800FF186E5AEC
3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F0101131F49
486C7E02007F01066D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913C0B5D8
800F13FFA3302B7FAA33>120 D<B539F001FFFCA3000790C7EA7FE06C48EC1F80000116
00160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C48
5AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC
1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C03
80D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 936 797 a Fi(Short)32 b(Description)g(of)g(the)h(Lin)m(ux)f
(ext2)h(File)e(System)3024 761 y Fh(\003)1696 992 y Fi(July)i(30,)f
(2003)0 1675 y Fg(In)c(the)g(Lin)n(ux)f(ext2)g(File)h(System,)g(the)g
(disk)f(can)h(b)r(e)g(regarded)d(as)i(an)h(arra)n(y)d(of)i(blo)r(c)n
(ks)g(of)h(iden)n(tical)f(size.)37 b(In)28 b(our)e(to)n(y)0
1775 y(v)n(ersion,)g(the)i(blo)r(c)n(k)f(size)g(is)h(8192)e(b)n(ytes,)h
(and)g(the)h(\014le)g(system)f(has)h(1024)d(blo)r(c)n(ks.)0
1935 y(T)-7 b(o)27 b(read)f(the)i(information)f(from)g(a)g(\014le,)g
(the)h(\014le)g(system)f(needs)g(to)g(kno)n(w)g(where)g(on)g(the)g
(disk)h(the)f(blo)r(c)n(ks)g(that)g(hold)h(the)0 2034
y(information)f(in)h(the)g(\014le)g(are)e(stored.)36
b(T)-7 b(o)27 b(accomplish)g(this,)h(the)g(ext2)f(\014le)h(system)f
(uses)h(some)f(additional)g(structures,)0 2134 y(called)g(ino)r(des.)37
b(More)27 b(precisely)-7 b(,)27 b(ev)n(ery)f(ph)n(ysical)h(\014le)g(on)
h(the)g(disk)f(is)g(represen)n(ted)g(b)n(y)g(an)h(ino)r(de.)36
b(Eac)n(h)27 b(ino)r(de)h(k)n(eeps)0 2234 y(information)f(ab)r(out)g
(the)h(size)g(of)f(the)h(\014le,)g(the)g(blo)r(c)n(ks)f(it)h(con)n
(tains)f(\(up)h(to)f(a)g(maxim)n(um)h(of)f(12)g(blo)r(c)n(ks)g(in)h
(our)f(to)n(y)0 2333 y(v)n(ersion\),)f(and)i(the)g(n)n(um)n(b)r(er)f
(of)h(en)n(tries)f(in)g(the)h(ro)r(ot)f(directory)g(p)r(oin)n(ting)g
(to)h(this)f(ino)r(de)h(\(see)g(b)r(elo)n(w\).)0 2493
y(As)g(y)n(ou)f(migh)n(t)g(ha)n(v)n(e)f(noticed)i(already)-7
b(,)26 b(the)i(only)f(information)g(ab)r(out)h(a)f(\014le)h(not)f
(included)i(in)e(an)h(ino)r(de)f(is)h(its)g(name.)0 2592
y(The)g(names)f(of)g(the)h(\014les)g(are)e(stored)h(in)h(a)f(sp)r
(ecial)h(structure,)f(called)g(the)h(ro)r(ot)f(directory)-7
b(.)0 2752 y(The)28 b(ro)r(ot)e(directory)h(is)g(stored)g(in)h(ino)r
(de)g(0,)f(and)g(is)h(comp)r(osed)f(of)g(directory)g(en)n(tries.)36
b(Eac)n(h)26 b(directory)g(en)n(try)h(o)r(ccupies)0 2852
y(128)f(b)n(ytes)h(and)h(k)n(eeps)f(information)g(ab)r(out)g(the)h
(name)g(of)f(a)g(\014le)h(and)g(the)f(ino)r(de)h(n)n(um)n(b)r(er)g
(where)f(this)g(\014le)h(is)g(stored.)0 3011 y(Note)g(that)g(w)n(e)f
(can)g(ha)n(v)n(e)f(m)n(ultiple)j(directory)d(en)n(tries)h(referencing)
f(the)i(same)f(ino)r(de.)37 b(In)28 b(this)g(case,)f(w)n(e)g(sa)n(y)f
(that)i(the)0 3111 y(corresp)r(onding)e(\014le)h(names)h(are)e(links)i
(for)f(one)g(another.)0 3271 y(Finally)-7 b(,)28 b(the)g(ext2)f(\014le)
h(system)f(con)n(tains)g(the)h(follo)n(wing)e(sp)r(ecial)h(blo)r(c)n
(ks:)0 3502 y Ff(Sup)s(erBlo)s(c)m(k)0 3656 y Fg(The)h(sup)r(erblo)r(c)
n(k)e(is)i(the)g(structure)f(on)g(an)h(ext2)f(disk)g(con)n(taining)g
(the)h(v)n(ery)e(basic)h(information)g(ab)r(out)h(the)g(\014le)f
(system.)0 3755 y(It)h(is)f(stored)g(in)h(blo)r(c)n(k)f(0,)g(and)h(is)f
(laid)h(out)f(in)h(the)g(follo)n(wing)f(form:)0 3934
y Fe(struct)41 b(SuperBlock)f({)87 4034 y(int)j(FreeBlockCount;)87
4134 y(int)g(FreeInodeCount;)87 4233 y(int)g(NumberofBlocks;)87
4333 y(int)g(NumberofInodes;)87 4432 y(int)g(RootDirectoryIn)o(od)o(e;)
87 4532 y(int)g(blocksize;)0 4632 y(};)0 4811 y Fg(where:)125
4990 y Fd(\017)e Fg(F)-7 b(reeBlo)r(c)n(kCoun)n(t:)35
b(indicates)27 b(the)h(total)g(n)n(um)n(b)r(er)f(of)g(free)h(blo)r(c)n
(ks)f(on)g(the)h(disk;)125 5154 y Fd(\017)41 b Fg(F)-7
b(reeIno)r(deCoun)n(t:)36 b(indicates)27 b(the)h(total)f(n)n(um)n(b)r
(er)h(of)f(free)h(ino)r(des)f(on)g(the)h(disk;)125 5319
y Fd(\017)41 b Fg(Num)n(b)r(erofBlo)r(c)n(ks:)35 b(indicates)28
b(the)g(total)f(n)n(um)n(b)r(er)g(of)h(blo)r(c)n(ks)f(on)g(the)h(disk;)
125 5484 y Fd(\017)41 b Fg(Num)n(b)r(erofIno)r(des:)36
b(indicates)28 b(the)g(total)f(n)n(um)n(b)r(er)g(of)h(ino)r(des)f(on)h
(the)g(disk;)p 0 5552 1584 4 v 91 5605 a Fc(\003)127
5628 y Fb(Adapted)17 b(from)d(the)j(do)r(cumen)n(ts)f(found)g(at)h(h)n
(ttp://www.nongn)n(u.org/ext2-do)r(c)j(and)c(h)n(ttp://info)r
(com.cqu.edu.au/Units/aut2000/85321/)0 5707 y(Assessmen)n(t/Exam/1995)p
745 5707 22 4 v 26 w(Supp)p 927 5707 V 26 w(Exam)p 1133
5707 V 25 w(Solutions)p eop
%%Page: 2 2
2 1 bop 125 390 a Fd(\017)41 b Fg(Ro)r(otDirectoryIno)r(de:)35
b(indicates)28 b(the)f(ino)r(de)h(where)f(the)h(ro)r(ot)f(directory)f
(is)i(k)n(ept;)125 541 y Fd(\017)41 b Fg(blo)r(c)n(ksize:)36
b(stores)26 b(the)i(blo)r(c)n(k)f(size;)0 767 y Ff(GroupBlo)s(c)m(k)0
920 y Fg(The)h(\014le)f(system)h(is)f(split)h(in)n(to)g
Fa(blo)l(ck)i(gr)l(oups)p Fg(.)38 b(Ho)n(w)n(ev)n(er,)25
b(our)i(to)n(y)g(v)n(ersion)f(con)n(tains)h(a)g(single)g(blo)r(c)n(k)g
(group.)36 b(The)0 1020 y(groupblo)r(c)n(k)26 b(is)h(stored)g(in)h(blo)
r(c)n(k)f(1)g(and)h(k)n(eeps)f(the)h(follo)n(wing)e(information:)0
1155 y Fe(struct)41 b(GroupBlock)f({)87 1254 y(int)j(BlockBitmapBloc)o
(k;)87 1354 y(int)g(InodeBitmapBloc)o(k;)87 1454 y(int)g
(InodeTableBlock)o(;)87 1553 y(int)g(GroupFreeBlockC)o(ou)o(nt;)87
1653 y(int)g(GroupFreeInodeC)o(ou)o(nt;)0 1753 y(};)0
1888 y Fg(where:)125 2032 y Fd(\017)e Fg(Blo)r(c)n(kBitmapBlo)r(c)n(k:)
35 b(indicates)27 b(the)h(blo)r(c)n(k)f(in)h(whic)n(h)g(the)g(blo)r(c)n
(k)f(bitmap)h(is)f(stored;)125 2183 y Fd(\017)41 b Fg(Ino)r
(deBitmapBlo)r(c)n(k:)36 b(indicates)27 b(the)h(blo)r(c)n(k)f(in)h
(whic)n(h)f(the)h(ino)r(de)g(bitmap)g(is)g(stored;)125
2333 y Fd(\017)41 b Fg(Ino)r(deT)-7 b(ableBlo)r(c)n(k:)35
b(indicates)28 b(the)g(blo)r(c)n(k)f(in)h(whic)n(h)f(the)h(ino)r(de)g
(table)f(is)h(stored;)125 2484 y Fd(\017)41 b Fg(GroupF)-7
b(reeBlo)r(c)n(kCoun)n(t:)34 b(indicates)28 b(the)g(total)f(n)n(um)n(b)
r(er)g(of)h(free)f(blo)r(c)n(ks)g(in)h(the)g(blo)r(c)n(k)f(group;)125
2635 y Fd(\017)41 b Fg(GroupF)-7 b(reeIno)r(deCoun)n(t:)35
b(indicates)28 b(the)g(total)f(n)n(um)n(b)r(er)g(of)h(free)f(ino)r(des)
h(in)f(the)h(blo)r(c)n(k)f(group;)0 2860 y Ff(Blo)s(c)m(kBitmap)0
3014 y Fg(The)h(blo)r(c)n(k)f(bitmap)h(is)f(an)h(arra)n(y)d(of)i(bits,)
h(whic)n(h)g(k)n(eeps)f(information)g(ab)r(out)g(whic)n(h)h(blo)r(c)n
(ks)e(are)h(free)g(and)h(whic)n(h)f(are)0 3113 y(used.)37
b(It)28 b(is)f(k)n(ept)h(in)g(blo)r(c)n(k)f(2.)0 3339
y Ff(Ino)s(deBitmap)0 3492 y Fg(The)h(ino)r(de)f(bitmap)h(is)g(an)f
(arra)n(y)e(of)j(bits,)g(whic)n(h)f(k)n(eeps)g(information)g(ab)r(out)h
(whic)n(h)f(ino)r(des)h(are)e(free)i(and)f(whic)n(h)h(are)0
3592 y(used.)37 b(It)28 b(is)f(k)n(ept)h(in)g(blo)r(c)n(k)f(3.)0
3818 y Ff(Ino)s(deT)-9 b(able)0 3971 y Fg(The)28 b(ino)r(de)f(table)h
(is)f(an)h(arra)n(y)d(of)i(ino)r(des,)h(used)g(to)f(k)n(eep)g(trac)n(k)
g(of)g(ev)n(ery)f(ino)r(de.)37 b(It)28 b(is)g(k)n(ept)f(in)h(blo)r(c)n
(k)f(4.)0 4191 y(The)g(next)f(t)n(w)n(o)g(diagrams)f(sho)n(w)h
(graphically)f(the)i(organization)d(of)j(the)g(disk)f(and)h(the)f
(organization)f(of)h(the)h(Ino)r(deT)-7 b(able:)330 5039
y @beginspecial 0 @llx 0 @lly 1295 @urx 259 @ury 3960
@rwi @setspecial
%%BeginDocument: disk.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/cristic/Work/Galen/Debug_July30/FS
%%Creator: Dia v0.88.1
%%CreationDate: Wed Jul 23 19:04:22 2003
%%For: cristic
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 1295 259
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
1.130468 -11.655310 translate
%%EndProlog


1.000000 1.000000 1.000000 srgb
n 2.200000 2.650000 m 2.200000 5.850000 l 8.450000 5.850000 l 8.450000 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 2.200000 2.650000 m 2.200000 5.850000 l 8.450000 5.850000 l 8.450000 2.650000 l cp s
1.000000 1.000000 1.000000 srgb
n 8.435000 2.650000 m 8.435000 5.850000 l 14.685000 5.850000 l 14.685000 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 8.435000 2.650000 m 8.435000 5.850000 l 14.685000 5.850000 l 14.685000 2.650000 l cp s
1.000000 1.000000 1.000000 srgb
n 14.685000 2.650000 m 14.685000 5.850000 l 20.935000 5.850000 l 20.935000 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 14.685000 2.650000 m 14.685000 5.850000 l 20.935000 5.850000 l 20.935000 2.650000 l cp s
1.000000 1.000000 1.000000 srgb
n 20.935000 2.650000 m 20.935000 5.850000 l 27.185000 5.850000 l 27.185000 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 20.935000 2.650000 m 20.935000 5.850000 l 27.185000 5.850000 l 27.185000 2.650000 l cp s
1.000000 1.000000 1.000000 srgb
n 27.185000 2.650000 m 27.185000 5.850000 l 33.435000 5.850000 l 33.435000 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 27.185000 2.650000 m 27.185000 5.850000 l 33.435000 5.850000 l 33.435000 2.650000 l cp s
/Courier-latin1 ff 0.800000 scf sf
(SuperBlock) dup sw 2 div 5.500000 ex sub 4.400000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 33.465000 2.650000 m 33.465000 5.850000 l 39.715000 5.850000 l 39.715000 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 33.465000 2.650000 m 33.465000 5.850000 l 39.715000 5.850000 l 39.715000 2.650000 l cp s
/Courier-latin1 ff 0.800000 scf sf
(GroupBlock) dup sw 2 div 11.600000 ex sub 4.400000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(BlockBitmap) dup sw 2 div 17.950000 ex sub 4.400000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(InodeBitmap) dup sw 2 div 24.100000 ex sub 4.400000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
() dup sw 2 div 14.200000 ex sub 11.550000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(InodeTable) dup sw 2 div 30.200000 ex sub 4.400000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 39.715000 2.650000 m 42.000000 2.600000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 39.715000 5.850000 m 42.050000 5.850000 l s
/Courier-latin1 ff 0.800000 scf sf
(.....) dup sw 2 div 43.035300 ex sub 4.250000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(block 0) dup sw 2 div 5.300000 ex sub 6.750000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(block 1) dup sw 2 div 11.700000 ex sub 6.750000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(block 2) dup sw 2 div 17.563000 ex sub 6.746020 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(block 3) dup sw 2 div 24.050000 ex sub 6.750000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(block 4) dup sw 2 div 30.013000 ex sub 6.746020 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(block 5) dup sw 2 div 36.563000 ex sub 6.746020 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(disk:) dup sw 2 div 0.429532 ex sub 4.450000 m gs 1 -1 sc sh gr
showpage

%%EndDocument
 @endspecial 1080 5707 a @beginspecial 0 @llx 0 @lly
707 @urx 259 @ury 2160 @rwi @setspecial
%%BeginDocument: InodeTable.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/cristic/Work/Galen/Debug_July30/InodeTable
%%Creator: Dia v0.88.1
%%CreationDate: Wed Jul 23 19:01:38 2003
%%For: cristic
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 707 259
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
4.118163 -11.655310 translate
%%EndProlog


1.000000 1.000000 1.000000 srgb
n 2.200000 2.650000 m 2.200000 5.850000 l 9.445300 5.850000 l 9.445300 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 2.200000 2.650000 m 2.200000 5.850000 l 9.445300 5.850000 l 9.445300 2.650000 l cp s
/Courier-latin1 ff 0.800000 scf sf
(RootDirectory) dup sw 2 div 5.750000 ex sub 4.400000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
() dup sw 2 div 14.200000 ex sub 11.550000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 16.680600 2.650000 m 19.000000 2.600000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 16.680600 5.850000 m 19.050000 5.800000 l s
/Courier-latin1 ff 0.800000 scf sf
(.....) dup sw 2 div 19.295300 ex sub 4.300000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(inode 0) dup sw 2 div 5.300000 ex sub 6.750000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.600000 scf sf
(inode 1) dup sw 2 div 12.713000 ex sub 6.796018 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(InodeTable:) dup sw 2 div -1.096163 ex sub 4.400000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 9.435300 2.650000 m 9.435300 5.850000 l 16.680600 5.850000 l 16.680600 2.650000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 9.435300 2.650000 m 9.435300 5.850000 l 16.680600 5.850000 l 16.680600 2.650000 l cp s
showpage

%%EndDocument
 @endspecial 1959 5956 a(2)p eop
%%Page: 3 3
3 2 bop 0 390 a Fg(Here)27 b(are)f(the)h(con)n(ten)n(ts)g(of)g(the)g
(\014le)g Fa(\014le.h)p Fg(,)i(whic)n(h)e(k)n(eeps)f(the)h(structure)g
(de\014nitions,)g(and)g(whic)n(h)g(is)g(almost)g(iden)n(tical)g(for)0
490 y(all)g(the)h(three)g(v)-5 b(arian)n(ts)26 b(of)i(the)g(program:)0
672 y Fe(#ifndef)41 b(FILE_H)0 772 y(#define)g(FILE_H)0
971 y(#define)g(BLOCKSIZE)f(8192)0 1071 y(#define)h(NUMBLOCK)f(1024)0
1171 y(#define)h(LENGTH)g(BLOCKSIZE*NUMBLO)o(CK)0 1270
y(#define)g(NUMINODES)f(BLOCKSIZE/56)0 1370 y(#define)h(NUMFILES)f(200)
0 1569 y(struct)h(block)h({)87 1669 y(char)g(array[BLOCKSIZE])o(;)0
1768 y(};)0 1968 y(struct)f(SuperBlock)f({)87 2067 y(int)j
(FreeBlockCount;)87 2167 y(int)g(FreeInodeCount;)87 2267
y(int)g(NumberofBlocks;)87 2366 y(int)g(NumberofInodes;)87
2466 y(int)g(RootDirectoryIn)o(od)o(e;)87 2565 y(int)g(blocksize;)0
2665 y(};)0 2864 y(struct)e(GroupBlock)f({)87 2964 y(int)j
(BlockBitmapBloc)o(k;)87 3064 y(int)g(InodeBitmapBloc)o(k;)87
3163 y(int)g(InodeTableBlock)o(;)87 3263 y(int)g(GroupFreeBlockC)o(ou)o
(nt;)87 3362 y(int)g(GroupFreeInodeC)o(ou)o(nt;)0 3462
y(};)0 3661 y(struct)e(BlockBitmap)e({)87 3761 y(char)j
(blocks[NUMBLOCK/)o(8+1)o(];)0 3861 y(};)0 4060 y(struct)f(InodeBitmap)
e({)87 4159 y(char)j(inode[NUMINODES/)o(8+1)o(];)0 4259
y(};)0 4458 y(struct)f(Inode)h({)87 4558 y(int)h(filesize;)87
4658 y(int)g(Blockptr[12];)87 4757 y(int)g(referencecount;)0
4857 y(};)0 5056 y(struct)e(InodeBlock)f({)87 5156 y(struct)h(Inode)h
(entries[NUMINODE)o(S])o(;)0 5255 y(};)0 5455 y(#define)f
(DIRECTORYENTRYS)o(IZE)c(128)0 5554 y(struct)k(DirectoryEntry)d({)87
5654 y(char)k(name[124];)1959 5956 y Fg(3)p eop
%%Page: 4 4
4 3 bop 87 390 a Fe(int)43 b(inodenumber;)0 490 y(};)0
689 y(struct)e(DirectoryBlock)d({)87 789 y(struct)j(DirectoryEntry)d
(entries[BLOCKSIZ)o(E/1)o(28)o(];)0 888 y(};)0 1187 y(void)k
(createdisk\(\);)0 1287 y(void)g(createfile\(struc)o(t)37
b(block)42 b(*ptr,char)e(*filename,)f(char)j(*buf,int)f(buflen\);)0
1386 y(void)h(addtode\(struct)c(block)j(*ptr,)h(int)g(inode,)f(char)h
(*)h(filename\);)0 1486 y(int)f(getinode\(struct)c(block)j(*ptr\);)0
1586 y(int)h(getblock\(struct)c(block)j(*)i(ptr\);)0
1685 y(void)f(removefile\(char)37 b(*filename,)j(struct)h(block)g
(*ptr\);)0 1785 y(void)h(createlink\(struc)o(t)37 b(block)42
b(*ptr,char)e(*filename,)f(char)j(*linkname\);)0 1885
y(struct)f(block)h(*)h(chmountdisk\(char)37 b(*filename\);)0
1984 y(void)42 b(chunmountdisk\(st)o(ru)o(ct)37 b(block)42
b(*vptr\);)0 2084 y(struct)f(block)h(*)h(mountdisk\(char)38
b(*filename\);)0 2183 y(void)k(unmountdisk\(stru)o(ct)37
b(block)42 b(*vptr\);)0 2283 y(void)g(closefile\(struct)37
b(block)k(*ptr,)h(int)g(fd\);)0 2383 y(bool)g(writefile\(struct)37
b(block)k(*ptr,)h(int)g(fd,)h(char)f(*s\);)0 2482 y(int)g
(writefile\(struct)37 b(block)42 b(*ptr,)f(int)i(fd,)f(char)g(*s,)g
(int)h(len\);)0 2582 y(char)f(readfile\(struct)37 b(block)42
b(*ptr,)f(int)i(fd\);)0 2682 y(int)f(readfile\(struct)c(block)j(*ptr,)h
(int)g(fd,)g(char)g(*buf,)g(int)g(len\);)0 2781 y(int)g
(openfile\(struct)c(block)j(*ptr,)h(char)g(*filename\);)0
2980 y(void)g(calltool\(char)c(*text\);)0 3180 y(#define)j(MAXFILES)f
(300)0 3279 y(struct)h(filedesc)f({)87 3379 y(int)j(inode;)87
3479 y(int)g(offset;)87 3578 y(bool)f(used;)0 3678 y(};)0
3778 y(#endif)1959 5956 y Fg(4)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
