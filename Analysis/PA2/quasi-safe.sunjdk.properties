# Copyright 2005 Alexandru Salcianu <salcianu@alum.mit.edu>
# Licensed under the terms of the GNU GPL; see COPYING for details.

# $Id: quasi-safe.sunjdk.properties,v 1.2 2005-09-16 19:08:45 salcianu Exp $

# Contains a partial list of the quasi-safe methods from the SUN Jdk
# 1.1.8 implementation of the Java standard library (the only sun jdk
# we will probably ever support).

# A "quasi-safe" method is a method that does not create any new
# externally visible aliasing to objects reachable from its parameters
# (this subsumes the fact that no parameter is lost, or returned).

# For each such method, we indicate its effects (if any): the indices
# of the parameters whose (transitively reachable) non-object fields
# may be mutated.  In addition, we use -1 for the IO read effect and
# -2 for the IO write effect.

java.lang.Object.hashCode()I
java.lang.Object.equals(Ljava/lang/Object;)Z

java.lang.Double.doubleToLongBits(D)J
java.lang.Double.longBitsToDouble(J)D

java.lang.Float.floatToIntBits(F)I

java.lang.Class.isArray()Z
java.lang.Class.isInterface()Z
java.lang.Class.isPrimitive()Z
java.lang.Class.getName()Ljava/lang/String;

java.lang.reflect.Constructor.getModifiers()I

java.lang.reflect.Field.getModifiers()I
java.lang.reflect.Field.getName()Ljava/lang/String;
	
java.lang.reflect.Method.getModifiers()I
java.lang.reflect.Method.getName()Ljava/lang/String;

java.io.FileInputStream.open(Ljava/lang/String;)V = -1
java.io.FileInputStream.available()I = -1
java.io.FileInputStream.read()I = -1
java.io.FileInputStream.read([B)I = -1, 1
java.io.FileInputStream.readBytes([BII)I = -1, 1
java.io.FileInputStream.skip(J)J = -1
java.io.FileInputStream.close()V = -1

java.io.File.length0()J = -1

java.io.FileOutputStream.open(Ljava/lang/String;)V = -2
java.io.FileOutputStream.close()V = -2
java.io.FileOutputStream.write(I)V = -2
java.io.FileOutputStream.write([B)V = -2
java.io.FileOutputStream.writeBytes([BII)V = -2



