/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class java_lang_Runtime */

#ifndef _Included_java_lang_Runtime
#define _Included_java_lang_Runtime
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     java_lang_Runtime
 * Method:    exitInternal
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_exitInternal
  (JNIEnv *, jobject, jint);

/*
 * Class:     java_lang_Runtime
 * Method:    runFinalizersOnExit0
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_runFinalizersOnExit0
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     java_lang_Runtime
 * Method:    execInternal
 * Signature: ([Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Runtime_execInternal
  (JNIEnv *, jobject, jobjectArray, jobjectArray);

/*
 * Class:     java_lang_Runtime
 * Method:    freeMemory
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_java_lang_Runtime_freeMemory
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Runtime
 * Method:    totalMemory
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_java_lang_Runtime_totalMemory
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Runtime
 * Method:    gc
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_gc
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Runtime
 * Method:    runFinalization
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_runFinalization
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Runtime
 * Method:    traceInstructions
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_traceInstructions
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     java_lang_Runtime
 * Method:    traceMethodCalls
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_traceMethodCalls
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     java_lang_Runtime
 * Method:    initializeLinkerInternal
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_Runtime_initializeLinkerInternal
  (JNIEnv *, jobject);

/*
 * Class:     java_lang_Runtime
 * Method:    buildLibName
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_java_lang_Runtime_buildLibName
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     java_lang_Runtime
 * Method:    loadFileInternal
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_java_lang_Runtime_loadFileInternal
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
