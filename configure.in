dnl Process this file with autoconf to produce a configure script.
AC_REVISION($Revision: 1.9 $)dnl
AC_INIT(include/jni.h)
AC_CONFIG_AUX_DIR(scripts)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(flexrun, 0.0)
AM_CONFIG_HEADER(include/config.h)
AC_PREREQ(2.13) dnl require autoconf version 2.13

AC_SUBST(IFLAGS) IFLAGS='' 

dnl Checks for programs.
AC_PROG_CC
AC_PROG_AWK
AC_PROG_RANLIB
AM_PROG_LIBTOOL
AC_PATH_PROG(FORTUNE, fortune, /usr/games/fortune)
AC_SUBST(FORTUNE)

dnl Checks for libraries.
AC_ARG_WITH(dmalloc,
  --with-dmalloc	  Use debugging malloc from ftp.letters.com,
test "$withval" = yes && withval='$(prefix)'
test "$withval" || withval='$(prefix)'
AC_DEFINE(WITH_DMALLOC, 1,
    [Define if you are using the debugging malloc from ftp.letters.com])
IFLAGS="$IFLAGS -I${withval}/include"
LDFLAGS="$LDFLAGS -L${withval}/lib"
LIBS="$LIBS -ldmalloc")

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/types.h sys/time.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_CACHE_CHECK([whether the system uses the O_BINARY flag],
	flexrun_cv_sys_obinary, AC_EGREP_CPP(yes, [
#include <fcntl.h>
#ifdef O_BINARY
 yes
#endif
], flexrun_cv_sys_obinary=yes, flexrun_cv_sys_obinary=no))
if test $flexrun_cv_sys_obinary != yes; then
  AC_DEFINE(O_BINARY, 0,
    [Define if your system doesn't support (or need) the O_BINARY flag])
fi
AC_CHECK_SIZEOF(void *)

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL  dnl sometimes needed for ioctl to work properly.
AC_CHECK_FUNCS(select, ,AC_MSG_ERROR([select() not found]))

dnl Match the CPU to an arch/ directory.
case "$target_cpu" in
arm*) archdir=arm32 ;;
sparc) archdir=sparc ;;
*)    AC_MSG_ERROR([no port for $target_cpu]) ;;
esac

AC_LINK_FILES(arch/${archdir}, include/asm)
AC_OUTPUT(Makefile src/Makefile src/jni/Makefile
	  src/java.io/Makefile src/java.lang/Makefile)
