Updated: 08/08/2002.

----------------------------------------------------------------
1. HOW TO MAKE EVERYTHING WORK
2. FILES' FORMATS
3. SERVER OPTIONS
4. "INSIDE" THE SERVER (IN CASE YOU DECIDE TO HACK THE SCRIPTS)
5. A COUPLE OF TIPS
----------------------------------------------------------------


================================
1. HOW TO MAKE EVERYTHING WORK.
================================

1.1. Make sure you checked out all files in this directory and did not accidently delete any of them.
1.2. Make sure your ssh client supports ssh1 and ssh2 protocols. If you are not sure what protocols your ssh client supports, or you don't know how to check, just go to http://rpmfind.net/, search for the latest version of OpenSSH for your platform, download and install it.
1.3. Make your ssh-agent working; you must be able to login automatically to all client-machines (see SSH-INSTALL for more details).
1.4. Read Section 2 -- FILES' FORMATS and Section 3 -- SERVER OPTIONS. Optionally, instead of reading Section 3 -- SERVER OPTIONS, you can run ./start-server --help, but in Section 3 -- SERVER OPTIONS everything is described in more details.
1.5. After you read Section 2 -- FILES' FORMATS, edit the files you're gonna use.
1.6. Run ./start-server <options>, where <options> are the options described in Section 3 -- SERVER OPTIONS.


==================
2. FILES' FORMATS
==================

machines-all/machines-selected (or any other file that contains the names of the client-machines):

	Each line of the file must have the following format: <user>@<machine>
	Note: if the account you are using on the remote machine is not the account you are using on the server, make sure that you copied the necessary ssh-agent files to the right directories.

	<user>    - the user who will run the tasks on the remote machine. The default value is the username you use for runnnig ./start-server
	<machine> - the hostname or the ip of the remote (or local) machine.

	Examples:
		machines-all/machines-selected:
			nw1.lcs.mit.edu
			nw2.lcs.mit.edu
			mike@nw3.lcs.mit.edu
			jhon@18.111.0.242

tasks-all/tasks-selected (or any other file that contains the names of the tasks to be run):

	Each line of the file must have the following format: <task>,<compile_line>,<command-line parameters>
	Note: DO NOT OMMIT COMMAS, even if you want to use the default values for <configure_line> and/or <command-line parameters>

	<task>         - the name of the task to be run. You can run either a .java file, or a script. If you want to run a script, change <task> to the script's name; if you want to run a .java file, change <task> to the name of the file WITHOUT the .java extension. For more information on how the task is run, see ../Client/README.

	<compile_line> - specifies the command-line to use for compiling <task>. If you are satisfied with the default value of this parameter ("bin/build-precisec -m -t ALL_RTJ_PERF_THREADS"), leave it blank. For more information, read FLEX documentation.
	<command-line parameters> - the command-line parameters to be passed to the executable. If you do not want to pass any command-line parameters, leave this parameter black.

	Examples:
		tasks-all/tasks-selected:
			Test1,bin/build-precisec -t SIMPLE_THREADS,1 2 3
			Test2,,4 5 6
			Test3,bin/build-precisec -t ALL_THREADS,
			Test4,,
			Test5,,,   (the last comma will be interpreted as a command-line parameter)

	INVALID EXAMPLES:
			,bin/build-precisec -t SIMPLE_THREADS, 1 2 3   (the task name is not specified)
			Test6,1 2 3   (1 2 3 will be interpreted as <compile_line>; remember: you cannot ommit commas)

mailto-all/mailto-selected (or any other file that contains the list of people to which the results should be mailed):

	Each line of the file must contain an email address.

	Examples:
		mailto-all/mailto-selected:
			rinard@cag.lcs.mit.edu
			anneh@eecs.mit.edu
			Charles.Vest@mit.edu


==================
3. SERVER OPTIONS
==================

Note: An alternative to reading this section is reading the output of ./start-server --help, but it is not as detailed as this section.

In order to use an option, you should pass it to the ./start-server script as <option>=yes or <option>=no. If you don't specify "=yes" or "=no", then the option will not be taken into account.

List of options with their description:
	-all-tasks
	-tasks-file
	-all-machines	
	-machines-file
	-update
	-update-clean
	-conf-each-test
	-compile
	-compile-stats
	-long-compile-stats
	-run
	-run-stats
	-long-runtime-stats
	-run-only-if-compiled
	-errors
	-diffs
	-mail-results
	-mail-to-all
	-mailto-file


================================================================
4. "INSIDE" THE SERVER (IN CASE YOU DECIDE TO HACK THE SCRIPTS)
================================================================


====================
5. A COUPLE OF TIPS
====================
