# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-e prog		Run "prog" on "cvs export" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# NOTE:  If you change any of the "Run" options above, you'll have to
# release and re-checkout any working directories of these modules.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.

# CVS Administrative modules.
CVSROOT		CVSROOT
commitinfo	CVSROOT commitinfo
cvswrappers	CVSROOT cvswrappers
editinfo	CVSROOT editinfo
modules 	CVSROOT modules
loginfo 	CVSROOT loginfo
rcsinfo 	CVSROOT rcsinfo
taginfo 	CVSROOT taginfo

# Version controlled sources:
Benchmarks Benchmarks
Classpath Classpath
Code	Code
Design	Design
Docs	Docs
EventDriven EventDriven
ImageRec ImageRec
Realtime Realtime
Repair	Repair
RoleDiscovery RoleDiscovery
RoleInference RoleInference
Runtime Runtime
SupportNP SupportNP
Tests	Tests
FLEX    -a Code Runtime

# pldi '99 paper (defunct)
#pldi99 -d pldi99.sigma Design harpoon.bib acmconf.sty acmconfbig.sty \
#	pldi99-abstract.tex pldi99-intro.tex pldi99-tech.tex \
#	pldi99.tex .cvsignore
#oopsla '02 paper
oopsla Design oopsla02.tex GNUmakefile comdef.sty acmconf.sty acmconf.cls \
	harpoon.bib &Figures
Figures Design/Figures
