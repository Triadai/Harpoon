# Set of safe native methods.
java.io.FileDescriptor.initSystemFD(Ljava/io/FileDescriptor;I)Ljava/io/FileDescriptor;=
java.io.FileInputStream.available()I=
java.io.FileInputStream.close()V=
java.io.FileInputStream.open(Ljava/lang/String;)V=
java.io.FileInputStream.readBytes([BII)I=
java.io.FileInputStream.read()I=
java.io.FileOutputStream.close()V=
java.io.FileOutputStream.open(Ljava/lang/String;)V=
java.io.FileOutputStream.write(I)V=
java.io.FileOutputStream.writeBytes([BII)V=
java.lang.ClassLoader.findSystemClass0(Ljava/lang/String;)Ljava/lang/Class;=java.lang.Class
# getSystemResourceAsStream0 is unimplemented.
java.lang.ClassLoader.getSystemResourceAsStream0(Ljava/lang/String;)Ljava/io/InputStream;=
# ClassLoader.init is unimplemented.
java.lang.ClassLoader.init()V=
java.lang.Class.forName(Ljava/lang/String;)Ljava/lang/Class;=java.lang.Class
java.lang.Class.getClassLoader()Ljava/lang/ClassLoader;=java.lang.ClassLoader
java.lang.Class.getName()Ljava/lang/String;=
java.lang.Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;=java.lang.Class
java.lang.Class.isInterface()Z=
java.lang.Class.isPrimitive()Z=
# java.lang.Class.newInstance= # this does need the check.
java.lang.Double.doubleToLongBits(D)J=
java.lang.Double.longBitsToDouble(J)D=
java.lang.Float.floatToIntBits(F)I=
java.lang.Math.floor(D)D=
java.lang.Math.log(D)D=
java.lang.Object.clone()Ljava/lang/Object;=
[Ljava/lang/Object;.clone()Ljava/lang/Object;=
java.lang.Object.getClass()Ljava/lang/Class;=java.lang.Class
java.lang.Object.hashCode()I=
java.lang.Runtime.buildLibName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;=
java.lang.Runtime.exitInternal(I)V=
java.lang.Runtime.initializeLinkerInternal()Ljava/lang/String;=java.lang.String
java.lang.Runtime.loadFileInternal(Ljava/lang/String;)I=
java.lang.String.intern()Ljava/lang/String;=
java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V=
java.lang.System.currentTimeMillis()J=
java.lang.Thread.currentThread()Ljava/lang/Thread;=java.lang.Thread
java.lang.Thread.interrupt0()V=
java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;=
java.lang.Throwable.printStackTrace0(Ljava/lang/Object;)V=
java.net.InetAddressImpl.getHostByAddr(I)Ljava/lang/String;=java.lang.String
java.net.InetAddressImpl.getInetFamily()I=
java.net.InetAddressImpl.getLocalHostName()Ljava/lang/String;=java.lang.String
java.net.InetAddressImpl.lookupAllHostAddr(Ljava/lang/String;)[[B=[[B [B
java.net.InetAddressImpl.makeAnyLocalAddress(Ljava/net/InetAddress;)V=
java.net.SocketInputStream.socketRead()= # just like FileInputStream.readBytes
java.net.SocketOutputStream.socketWrite()= # "   "  FileOutputStream.writeBytes
java.util.ResourceBundle.getClassContext()[Ljava/lang/Class;=java.lang.Class
