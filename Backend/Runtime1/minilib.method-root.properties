# these are the root methods for Runtime1 (fun, ain't they?)
#######################################################################

## implicitly called during startup/shutdown:
java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V
java.lang.Thread.getThreadGroup()Ljava/lang/ThreadGroup;
java.lang.ThreadGroup.<init>()V
java.lang.ThreadGroup.uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V
java.lang.ThreadGroup.removeThread(Ljava/lang/Thread;)V

# this is the actual implementation used for any array clone method, so
# hack it into the hierarchy.
[Ljava/lang/Object;.clone()Ljava/lang/Object;

# the JNI implementation uses these
java.lang.NoClassDefFoundError.<init>(Ljava/lang/String;)V
#java.lang.NoSuchMethodError.<init>(Ljava/lang/String;)V
#java.lang.NoSuchFieldError.<init>(Ljava/lang/String;)V
java.lang.String.<init>([C)V
java.lang.String.length()I
java.lang.String.toCharArray()[C
#java.lang.OutOfMemoryError.<init>(Ljava/lang/String;)V

# the runtime's reflection implementation mentions these
# (and they are (statically) instantiated, so reference the
# constructors)
java.lang.Class.<init>()V
java.lang.reflect.Constructor.<init>()V
java.lang.reflect.Field.<init>()V
java.lang.reflect.Method.<init>()V

# FNI_ExceptionDescribe uses this
java.lang.Throwable.toString()Ljava/lang/String;

# in java.lang implementations
java.lang.ArrayIndexOutOfBoundsException.<init>(Ljava/lang/String;)V
java.lang.ArrayStoreException.<init>(Ljava/lang/String;)V
#java.lang.ClassNotFoundException.<init>(Ljava/lang/String;)V
#java.lang.InstantiationException.<init>(Ljava/lang/String;)V # by Class.newInstance()
# thrown by impl of Class.getField()
java.lang.NoSuchFieldException.<init>(Ljava/lang/String;)V
# thrown by impl of Class.getMethod() and Class.getConstructor()
java.lang.NoSuchMethodException.<init>(Ljava/lang/String;)V

#gnu.java.lang.SystemClassLoader.<init>(Ljava/lang/ClassLoader;)V

################################################ that's all!
