# Set of safe native methods for the transaction transformation.
# [note that we don't have to specify the descriptor for uniquely-named
#  methods now.  also, end-of-line comments are allowed!]
java.lang.Class.getComponentType() # Class is read-only.
java.lang.Class.getName()
java.lang.Class.isArray()Z
java.lang.Class.isInstance(Ljava/lang/Object;)Z # only looks at type of param
java.lang.Class.isInterface()Z
java.lang.Class.isPrimitive()Z
java.lang.Double.doubleToLongBits() # only uses local data
java.lang.Double.doubleToRawLongBits() # only uses local data
java.lang.Double.longBitsToDouble() # only uses local data
java.lang.Double.toString(DZ)Ljava/lang/String; # no side effects
java.lang.Float.floatToIntBits() # only uses local data
java.lang.Float.floatToRawIntBits() # only uses local data
java.lang.Float.intBitsToFloat() # only uses local data
java.lang.Math.IEEEremainder(DD)D # only local data
java.lang.Math.acos(D)D # only uses local data
java.lang.Math.asin(D)D # only uses local data
java.lang.Math.atan(D)D # only uses local data
java.lang.Math.atan2(DD)D # only uses local data
java.lang.Math.ceil(D)D # only uses local data
java.lang.Math.cos(D)D # only uses local data
java.lang.Math.exp(D)D # only uses local data
java.lang.Math.floor() # only uses local data
java.lang.Math.log(D)D # only uses local data
java.lang.Math.pow(DD)D # only uses local data
java.lang.Math.rint(D)D # only uses local data
java.lang.Math.sin(D)D # only uses local data
java.lang.Math.sqrt(D)D # only uses local data
java.lang.Math.tan(D)D # only uses local data
java.lang.Object.getClass() # version has same class as object, always.
java.lang.reflect.Field.getDeclaringClass() # Field is read-only.
java.lang.reflect.Field.getModifiers()I # Field is read-only.
java.lang.reflect.Field.getName() # Field is read-only.
java.lang.reflect.Field.getType() # Field is read-only.
java.lang.reflect.Method.getDeclaringClass() # Method is read-only
java.lang.reflect.Method.getExceptionTypes() # Method is read-only
java.lang.reflect.Method.getModifiers() # Method is read-only
java.lang.reflect.Method.getName() # Method is read-only
java.lang.reflect.Method.getParameterTypes() # Method is read-only
java.lang.reflect.Method.getReturnType() # Method is read-only
java.lang.reflect.Constructor.getDeclaringClass() # Constructor is read-only
java.lang.reflect.Constructor.getExceptionTypes() # Constructor is read-only
java.lang.reflect.Constructor.getModifiers() # Constructor is read-only
java.lang.reflect.Constructor.getName() # Constructor is read-only
java.lang.reflect.Constructor.getParameterTypes() # Constructor is read-only
java.lang.Runtime.gc() # should be safe w/in a transaction.
java.lang.Runtime.runFinalization() # should be safe w/in a transaction
java.lang.Thread.currentThread() # kinda sketch, but sure.
java.lang.Thread.isAlive()Z # kinda sketch, again.
java.lang.Thread.sleep(JI)V # doesn't do anything but sleep the current thread
java.lang.VMSystem.currentTimeMillis() # only uses local data. (sketch?)
java.lang.VMSystem.identityHashCode() # version has same hashcode as object.
# haven't found the right classpath equivalents of these:
#java.net.InetAddressImpl.getHostByAddr() # only uses local data.
#java.net.InetAddressImpl.getInetFamily() # only uses local data.

# my own stuff
harpoon.Runtime.DynamicSyncImpl.isNoSync() # will be replaced anyway.
