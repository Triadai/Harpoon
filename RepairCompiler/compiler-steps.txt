Step 1: Building Compiler
-------------------------
cd RepairCompiler/MCC
make clean
make


Step 2: Run Compiler
--------------------
Example: 
For the specifs in ex.constraints, ex.struct, ex.space, ex.abstract, ex.model 
in directory Repair/Ex:

A) cd Ex
B) java -classpath <path to RepairCompiler> MCC.Compiler -checkonly ex

which builds:
  ex.cc
  ex_aux.h
  ex_aux.cc
  size.h
  size.cc
  

Step 3: Compile checker
-----------------------

A) copy the Runtime directory in Repair/Ex:   
   cp -r <path to RepairCompiler>/MCC/Runtime .
B) copy generated files into the Runtime directory 
   cp ex.cc ex_aux.* size.* Runtime
C) remove old object files 
   cd Runtime; rm *.o
D) ./buildruntime
E) build checking object: 
   g++ -g -c ex_aux.cc


Step 4: Check the application
-----------------------------

If ex_test.c is the application under testing, then:

A) in ex_test.c, add:
   #include "ex_aux.h" 
   #include "memory.h"
B) at the beginning of the main method, add:
   initializemmap();
C) wherever you want to check the consistency constraints, add:
   #include "ex.cc"
D) compile the application:
   g++ -g ex_test.cc *.o -o ex_test
E) run the application: 
   ./ex_test
